{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\taghos\\\\source\\\\experiments\\\\MyActivity\\\\myactivity\\\\src\\\\ConfigTile.js\";\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport logo from \"./logo.svg\";\nimport './ConfigTile.css';\n\nfunction ConfigTile() {\n  const [value, setValue] = \"\";\n  const [Sunday, setSunday] = React.useState(false);\n\n  const handleSunday = () => setSunday(!Sunday);\n\n  console.log(\"Sunday : \" + Sunday);\n  const [Monday, setMonday] = React.useState(true);\n\n  const handleMonday = () => setMonday(!Monday);\n\n  console.log(\"Monday : \" + Monday);\n  const [Tuesday, setTuesday] = React.useState(true);\n\n  const handleTuesday = () => setTuesday(!Tuesday);\n\n  console.log(\"Tuesday : \" + Tuesday);\n  const [Wednesday, setWednesday] = React.useState(true);\n\n  const handleWednesday = () => setWednesday(!Wednesday);\n\n  console.log(\"Wednesday : \" + Wednesday);\n  const [Thursday, setThursday] = React.useState(true);\n\n  const handleThursday = () => setThursday(!Thursday);\n\n  console.log(\"Thursday : \" + Thursday);\n  const [Friday, setFriday] = React.useState(true);\n\n  const handleFriday = () => setFriday(!Friday);\n\n  console.log(\"Friday : \" + Friday);\n  const [Saturday, setSaturday] = React.useState(false);\n\n  const handleSaturday = () => setSaturday(!Saturday);\n\n  console.log(\"Saturday : \" + Saturday);\n  const [StartTime, setStartTime] = React.useState(\"8:00AM\");\n\n  const handleStartTime = () => {\n    var startTime = document.getElementById(\"startTime\");\n    var result = startTime.options[startTime.selectedIndex].value;\n    setStartTime(result);\n  };\n\n  console.log(\"Start Time : \" + StartTime);\n  const [EndTime, setEndTime] = React.useState(\"5:00PM\");\n\n  const handleEndTime = () => {\n    var endTime = document.getElementById(\"endTime\");\n    var result = endTime.options[endTime.selectedIndex].value;\n    setEndTime(result);\n  };\n\n  console.log(\"End Time : \" + EndTime);\n  const [Duration, setDuration] = React.useState(\"15min\");\n\n  const handleDuration = () => {\n    var duration = document.getElementById(\"activityDuration\");\n    var result = duration.options[duration.selectedIndex].value;\n    setDuration(result);\n  };\n\n  console.log(\"Duration : \" + Duration);\n  let activityStartTime, activityEndTime;\n\n  const fetchData = async () => {\n    try {\n      let s = document.getElementById(\"startTime\");\n      let startHour = (parseInt(s.options[s.selectedIndex].value) + 7).toString(); // Convert to UTC time\n\n      let e = document.getElementById(\"endTime\");\n      let endHour = (parseInt(e.options[e.selectedIndex].value) + 7).toString();\n      var datePrefix = new Date().toISOString().substring(0, 11);\n      var startTime = datePrefix + startHour + ':00:00.0000000';\n      var endTime = datePrefix + endHour + ':00:00.0000000';\n      console.log(startTime + \" : \" + endTime);\n      let getCalendarEventsUrl = \"https://graph.microsoft.com/v1.0/me/calendarView?startDateTime=\" + startTime + \"&endDateTime=\" + endTime + \"&$select=subject,start,end\";\n      const options = {\n        headers: {\n          \"Authorization\": await getAuthorizationToken()\n        }\n      }; // Fetching user's calendar data for today\n\n      var response = await fetch(getCalendarEventsUrl, options);\n\n      if (response.status >= 300) {\n        throw new Error(response.statusText);\n      }\n\n      var body = await response.json();\n      var events = body.value;\n      let startTimes = [];\n      let endTimes = [];\n      let i = 0;\n      console.log(\"Scanning your calendar\");\n      events.forEach(element => {\n        startTimes[i] = new Date(element.start.dateTime);\n        endTimes[i] = new Date(element.end.dateTime); // console.log(element.subject + \" : \" + startTimes[i] + \" to \" + endTimes[i]);\n\n        i++;\n      });\n      startTimes[i] = new Date(endTime);\n      startTimes.sort((a, b) => a - b);\n      endTimes.sort((a, b) => a - b);\n      let maxDiff = new Date(startTimes[0]) - new Date(startTime);\n      let j,\n          interval = 0,\n          hourDiff = 0;\n\n      for (j = 1; j <= startTimes.length; j++) {\n        var diff = new Date(startTimes[j]) - new Date(endTimes[j - 1]);\n\n        if (diff > maxDiff) {\n          hourDiff = new Date(startTimes[j]).getHours() - new Date(endTimes[j - 1]).getHours();\n          maxDiff = diff;\n          interval = j;\n        }\n      }\n\n      var hour = (interval === 0 ? 15 : new Date(endTimes[interval - 1]).getHours()) + (hourDiff % 2 === 0 ? hourDiff / 2 : (hourDiff + 1) / 2);\n      activityStartTime = new Date(startTime);\n      activityStartTime.setHours(hour - 7);\n      activityStartTime.setMinutes(0);\n      activityStartTime.setSeconds(0);\n      activityStartTime.setMilliseconds(0);\n      console.log(\"Looks Like we can book some active time on: \" + activityStartTime);\n      activityEndTime = new Date(startTime);\n      activityEndTime.setHours(hour - 7);\n      activityEndTime.setMinutes(15);\n      activityEndTime.setSeconds(0);\n      activityEndTime.setMilliseconds(0);\n    } catch (error) {\n      console.log(\"Error in fetching calendar data: \" + error.message);\n    }\n  };\n\n  const createEvent = async () => {\n    try {\n      let addEventUrl = \"https://graph.microsoft.com/v1.0/me/events\";\n      const options = {\n        method: \"POST\",\n        body: JSON.stringify({\n          subject: \"Some Activity\",\n          start: {\n            dateTime: activityStartTime.toISOString(),\n            timeZone: \"Pacific Standard Time\"\n          },\n          end: {\n            dateTime: activityEndTime.toISOString(),\n            timeZone: \"Pacific Standard Time\"\n          },\n          responseRequested: true,\n          allowNewTimeProposals: true\n        }),\n        headers: {\n          \"Content-type\": \"application/json\",\n          \"Authorization\": await getAuthorizationToken()\n        }\n      };\n      var response = await fetch(addEventUrl, options);\n\n      if (response.status >= 300) {\n        throw new Error(response.statusText);\n      }\n\n      console.log(\"Event added. Please check your calendar!\");\n    } catch (error) {\n      console.log(\"Error in creating calendar event: \" + error.message);\n    }\n  };\n\n  const getAuthorizationToken = async () => {\n    // const authUrl = \"https://login.microsoftonline.com/72f988bf-86f1-41af-91ab-2d7cd011db47/oauth2/v2.0/authorize?client_id=5404d196-ed30-4a60-be91-03a30990f73b&response_type=code&redirect_uri=http%3A%2F%2Flocalhost&response_mode=query&scope=Calendars.ReadWrite&state=12345\";\n    // var res = await fetch(authUrl);\n    // console.log(res);\n    // var jsonResponse = await res.json();\n    // console.log(jsonResponse);\n    // var details = {\n    //   'client_id': \"5404d196-ed30-4a60-be91-03a30990f73b\",\n    //   'scope': \"Calendars.ReadWrite\",\n    //   'client_secret': \"\",\n    //   'grant_type': \"authorization_code\",\n    //   'redirect_uri': \"http://localhost\", \n    //   'code': \"\"\n    // };\n    // var formBody = [];\n    // for (var property in details) {\n    //   var encodedKey = encodeURIComponent(property);\n    //   var encodedValue = encodeURIComponent(details[property]);\n    //   formBody.push(encodedKey + \"=\" + encodedValue);\n    // }\n    // formBody = formBody.join(\"&\");\n    // const options = {\n    //   method: \"POST\",\n    //   body: formBody,\n    //   headers: {\n    //     \"Content-type\": \"application/x-www-form-urlencoded\"\n    //   }\n    // }\n    // var tokenEndPoint = \"https://login.microsoftonline.com/72f988bf-86f1-41af-91ab-2d7cd011db47/oauth2/v2.0/token\";\n    // var res = await fetch(tokenEndPoint, options);\n    // console.log(res);\n    // Paste Token from Graph Explorer Access Token tab until the generating auth token part above is complete\n    return \"\";\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 21\n    }\n  }, \"My Configurations\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 34\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 33\n    }\n  }, \"Autobook into Calendar\"), /*#__PURE__*/React.createElement(\"span\", {\n    class: \"titleline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    class: \"switch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 34\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"expand\",\n    onChange: openConfig,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 38\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    class: \"slider round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 38\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 30\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"text\",\n    style: {\n      display: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 30\n    }\n  }, \"Set a schedule for when MyActivity is active \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 82\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 89\n    }\n  }), /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 37\n    }\n  }, \" Active Days \"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 58\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"sunday\",\n    checked: Sunday,\n    onClick: handleSunday,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 33\n    }\n  }), \"\\xA0 Sun \\xA0 \\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"monday\",\n    defaultChecked: true,\n    onClick: handleMonday,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 34\n    }\n  }), \"\\xA0   Mon \\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"tuesday\",\n    defaultChecked: true,\n    onClick: handleTuesday,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 33\n    }\n  }), \"\\xA0   Tues \\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"wednesday\",\n    defaultChecked: true,\n    onClick: handleWednesday,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 33\n    }\n  }), \"\\xA0   Wed \\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"thursday\",\n    defaultChecked: true,\n    onClick: handleThursday,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 33\n    }\n  }), \"\\xA0   Thurs \\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"friday\",\n    defaultChecked: true,\n    onClick: handleFriday,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 33\n    }\n  }), \"\\xA0   Fri \\xA0\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"saturday\",\n    onClick: handleSaturday,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 33\n    }\n  }), \"\\xA0  Sat \\xA0\\xA0\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 33\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 40\n    }\n  }), /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 33\n    }\n  }, \" Active Hours \"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 55\n    }\n  }), \"Start time \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 End time \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 102\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"start time\",\n    id: \"startTime\",\n    onChange: () => setStartTime(handleStartTime),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"00\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 37\n    }\n  }, \"12:00 am\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"01\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 37\n    }\n  }, \"1:00 am\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"02\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 37\n    }\n  }, \"2:00 am\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"03\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 37\n    }\n  }, \"3:00 am\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"04\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 37\n    }\n  }, \"4:00 am\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"05\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 37\n    }\n  }, \"5:00 am\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"06\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 37\n    }\n  }, \"6:00 am\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"07\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 37\n    }\n  }, \"7:00 am\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"08\",\n    selected: \"selected\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 37\n    }\n  }, \"8:00 am\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"09\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 37\n    }\n  }, \"9:00 am\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 37\n    }\n  }, \"10:00 am\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"11\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 37\n    }\n  }, \"11:00 am\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 37\n    }\n  }, \"12:00 am\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"13\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 37\n    }\n  }, \"1:00 pm\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"14\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 37\n    }\n  }, \"2:00 pm\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 37\n    }\n  }, \"3:00 pm\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 37\n    }\n  }, \"4:00 pm\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"17\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 37\n    }\n  }, \"5:00 pm\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 37\n    }\n  }, \"6:00 pm\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"19\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 37\n    }\n  }, \"7:00 pm\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 37\n    }\n  }, \"8:00 pm\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"21\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 37\n    }\n  }, \"9:00 pm\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"22\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 37\n    }\n  }, \"10:00 pm\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"23\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 37\n    }\n  }, \"11:00 pm\")), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0\", /*#__PURE__*/React.createElement(\"select\", {\n    name: \"end time\",\n    id: \"endTime\",\n    onChange: () => setEndTime(handleEndTime),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"00\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 33\n    }\n  }, \"12:00 am\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"01\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 37\n    }\n  }, \"1:00 am\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"02\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 37\n    }\n  }, \"2:00 am\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"03\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 37\n    }\n  }, \"3:00 am\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"04\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 37\n    }\n  }, \"4:00 am\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"05\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 37\n    }\n  }, \"5:00 am\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"06\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 37\n    }\n  }, \"6:00 am\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"07\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 37\n    }\n  }, \"7:00 am\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"08\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 37\n    }\n  }, \"8:00 am\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"09\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 37\n    }\n  }, \"9:00 am\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 37\n    }\n  }, \"10:00 am\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"11\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 37\n    }\n  }, \"11:00 am\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 37\n    }\n  }, \"12:00 am\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"13\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 37\n    }\n  }, \"1:00 pm\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"14\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 37\n    }\n  }, \"2:00 pm\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 37\n    }\n  }, \"3:00 pm\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 37\n    }\n  }, \"4:00 pm\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"17\",\n    selected: \"selected\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 37\n    }\n  }, \"5:00 pm\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 37\n    }\n  }, \"6:00 pm\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"19\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 37\n    }\n  }, \"7:00 pm\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 37\n    }\n  }, \"8:00 pm\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"21\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 37\n    }\n  }, \"9:00 pm\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"22\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 37\n    }\n  }, \"10:00 pm\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"23\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 37\n    }\n  }, \"11:00 pm\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 33\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 40\n    }\n  }), /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 33\n    }\n  }, \" Active Duration \"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 58\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"activity duration\",\n    id: \"activityDuration\",\n    onChange: () => setDuration(handleDuration),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"15min\",\n    selected: \"selected\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 37\n    }\n  }, \"15 min\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"30min\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 37\n    }\n  }, \"30 min\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"45min\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 37\n    }\n  }, \"45 min\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1hr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 37\n    }\n  }, \"1 hr\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 33\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"fetch\",\n    onClick: fetchData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 33\n    }\n  }, \"Fetch My Calendar Data and Create Activity Events\"))))))));\n}\n\nfunction openConfig() {\n  var checkBox = document.getElementById(\"expand\");\n  var text = document.getElementById(\"text\");\n\n  if (checkBox.checked == true) {\n    text.style.display = \"block\";\n    const Autobook = true;\n    console.log(\"Autobook is \" + Autobook);\n  } else {\n    text.style.display = \"none\";\n    const Autobook = false;\n    console.log(\"Autobook is \" + Autobook);\n  }\n}\n\nexport default ConfigTile;","map":{"version":3,"sources":["C:/Users/taghos/source/experiments/MyActivity/myactivity/src/ConfigTile.js"],"names":["React","Button","ButtonGroup","ToggleButton","ToggleButtonGroup","Card","Form","ConfigTile","value","setValue","Sunday","setSunday","useState","handleSunday","console","log","Monday","setMonday","handleMonday","Tuesday","setTuesday","handleTuesday","Wednesday","setWednesday","handleWednesday","Thursday","setThursday","handleThursday","Friday","setFriday","handleFriday","Saturday","setSaturday","handleSaturday","StartTime","setStartTime","handleStartTime","startTime","document","getElementById","result","options","selectedIndex","EndTime","setEndTime","handleEndTime","endTime","Duration","setDuration","handleDuration","duration","activityStartTime","activityEndTime","fetchData","s","startHour","parseInt","toString","e","endHour","datePrefix","Date","toISOString","substring","getCalendarEventsUrl","headers","getAuthorizationToken","response","fetch","status","Error","statusText","body","json","events","startTimes","endTimes","i","forEach","element","start","dateTime","end","sort","a","b","maxDiff","j","interval","hourDiff","length","diff","getHours","hour","setHours","setMinutes","setSeconds","setMilliseconds","error","message","createEvent","addEventUrl","method","JSON","stringify","subject","timeZone","responseRequested","allowNewTimeProposals","openConfig","display","checkBox","text","checked","style","Autobook"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Form from 'react-bootstrap/Form'\r\nimport logo from './logo.svg';\r\nimport './ConfigTile.css';\r\n\r\nfunction ConfigTile() {\r\n    \r\n    const [value, setValue] = \"\";\r\n    const [Sunday, setSunday] = React.useState(false);\r\n    const handleSunday = () => setSunday(!Sunday)\r\n    console.log(\"Sunday : \" + Sunday);\r\n\r\n    const [Monday, setMonday] = React.useState(true);\r\n    const handleMonday = () => setMonday(!Monday)\r\n    console.log(\"Monday : \" + Monday);\r\n\r\n    const [Tuesday, setTuesday] = React.useState(true);\r\n    const handleTuesday = () => setTuesday(!Tuesday)\r\n    console.log(\"Tuesday : \" + Tuesday);\r\n\r\n    const [Wednesday, setWednesday] = React.useState(true);\r\n    const handleWednesday = () => setWednesday(!Wednesday)\r\n    console.log(\"Wednesday : \" + Wednesday);\r\n\r\n    const [Thursday, setThursday] = React.useState(true);\r\n    const handleThursday = () => setThursday(!Thursday)\r\n    console.log(\"Thursday : \" + Thursday);\r\n\r\n    const [Friday, setFriday] = React.useState(true);\r\n    const handleFriday = () => setFriday(!Friday)\r\n    console.log(\"Friday : \" + Friday);\r\n\r\n    const [Saturday, setSaturday] = React.useState(false);\r\n    const handleSaturday = () => setSaturday(!Saturday)\r\n    console.log(\"Saturday : \" + Saturday);\r\n\r\n    const [StartTime, setStartTime] = React.useState(\"8:00AM\");\r\n    const handleStartTime = () => {\r\n        var startTime = document.getElementById(\"startTime\");\r\n        var result = startTime.options[startTime.selectedIndex].value;\r\n        setStartTime(result);\r\n    }\r\n    console.log(\"Start Time : \" + StartTime);\r\n\r\n    const [EndTime, setEndTime] = React.useState(\"5:00PM\");\r\n    const handleEndTime = () => {\r\n        var endTime = document.getElementById(\"endTime\");\r\n        var result = endTime.options[endTime.selectedIndex].value;\r\n        setEndTime(result);\r\n    }\r\n    console.log(\"End Time : \" + EndTime);\r\n\r\n    const [Duration, setDuration] = React.useState(\"15min\");\r\n    const handleDuration = () => {\r\n        var duration = document.getElementById(\"activityDuration\");\r\n        var result = duration.options[duration.selectedIndex].value;\r\n        setDuration(result);\r\n    }\r\n    console.log(\"Duration : \" + Duration);\r\n\r\n    let activityStartTime, activityEndTime;\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        let s = document.getElementById(\"startTime\");\r\n        let startHour = (parseInt(s.options[s.selectedIndex].value)+7).toString();  // Convert to UTC time\r\n        let e = document.getElementById(\"endTime\");\r\n        let endHour = (parseInt(e.options[e.selectedIndex].value)+7).toString();\r\n        var datePrefix = new Date().toISOString().substring(0, 11);\r\n        var startTime = datePrefix + startHour + ':00:00.0000000';\r\n        var endTime = datePrefix + endHour + ':00:00.0000000';\r\n        console.log(startTime + \" : \" + endTime);\r\n  \r\n        let getCalendarEventsUrl = \"https://graph.microsoft.com/v1.0/me/calendarView?startDateTime=\" + startTime + \"&endDateTime=\" + endTime + \"&$select=subject,start,end\";\r\n  \r\n        const options = {\r\n          headers: {\r\n            \"Authorization\": await getAuthorizationToken()\r\n          }\r\n        };\r\n  \r\n        // Fetching user's calendar data for today\r\n        var response = await fetch(getCalendarEventsUrl, options);\r\n        if(response.status >= 300) {\r\n          throw new Error(response.statusText);\r\n        }\r\n  \r\n        var body = await response.json();\r\n        var events = body.value;\r\n  \r\n        let startTimes = [];\r\n        let endTimes = [];\r\n        let i = 0;\r\n  \r\n        console.log(\"Scanning your calendar\");\r\n  \r\n        events.forEach(element => {\r\n          startTimes[i] = new Date(element.start.dateTime);\r\n          endTimes[i] = new Date(element.end.dateTime);\r\n          // console.log(element.subject + \" : \" + startTimes[i] + \" to \" + endTimes[i]);\r\n          i++;\r\n        });\r\n  \r\n        startTimes[i] = new Date(endTime);\r\n  \r\n        startTimes.sort((a,b) => a-b);\r\n        endTimes.sort((a,b) => a-b);\r\n  \r\n        let maxDiff = new Date(startTimes[0]) - new Date(startTime);\r\n  \r\n        let j, interval = 0, hourDiff = 0;\r\n        for(j=1; j<=startTimes.length; j++) {\r\n          var diff = new Date(startTimes[j]) - new Date(endTimes[j-1]);\r\n          if(diff > maxDiff) {\r\n            hourDiff = new Date(startTimes[j]).getHours() - new Date(endTimes[j-1]).getHours();\r\n            maxDiff = diff;\r\n            interval = j;\r\n          }\r\n        }\r\n  \r\n        var hour = (interval === 0 ? 15 : new Date(endTimes[interval-1]).getHours()) + ((hourDiff%2) === 0 ? hourDiff/2 : (hourDiff+1)/2);\r\n        \r\n        activityStartTime = new Date(startTime);\r\n        activityStartTime.setHours(hour-7);\r\n        activityStartTime.setMinutes(0);\r\n        activityStartTime.setSeconds(0);\r\n        activityStartTime.setMilliseconds(0);\r\n  \r\n        console.log(\"Looks Like we can book some active time on: \" + activityStartTime);\r\n        \r\n        activityEndTime = new Date(startTime);\r\n        activityEndTime.setHours(hour-7);\r\n        activityEndTime.setMinutes(15);\r\n        activityEndTime.setSeconds(0);\r\n        activityEndTime.setMilliseconds(0);\r\n      } catch (error) {\r\n        console.log(\"Error in fetching calendar data: \" + error.message);\r\n      }\r\n    }\r\n      \r\n    const createEvent = async () => {\r\n      try {\r\n        let addEventUrl = \"https://graph.microsoft.com/v1.0/me/events\";\r\n  \r\n        const options = {\r\n          method: \"POST\",\r\n          body: JSON.stringify(\r\n            {  \r\n              subject: \"Some Activity\",\r\n              start: {\r\n                dateTime: activityStartTime.toISOString(),\r\n                timeZone: \"Pacific Standard Time\"\r\n              },\r\n              end: {\r\n                dateTime: activityEndTime.toISOString(),\r\n                timeZone: \"Pacific Standard Time\"\r\n              },\r\n              responseRequested: true,\r\n              allowNewTimeProposals: true\r\n            }\r\n          ),\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n            \"Authorization\": await getAuthorizationToken()\r\n          }\r\n        };\r\n  \r\n        var response = await fetch(addEventUrl, options);\r\n        if(response.status >= 300) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        console.log(\"Event added. Please check your calendar!\");\r\n      } catch (error) {\r\n        console.log(\"Error in creating calendar event: \" + error.message);\r\n      }\r\n    }\r\n    \r\n    const getAuthorizationToken = async() => {\r\n      // const authUrl = \"https://login.microsoftonline.com/72f988bf-86f1-41af-91ab-2d7cd011db47/oauth2/v2.0/authorize?client_id=5404d196-ed30-4a60-be91-03a30990f73b&response_type=code&redirect_uri=http%3A%2F%2Flocalhost&response_mode=query&scope=Calendars.ReadWrite&state=12345\";\r\n      // var res = await fetch(authUrl);\r\n      // console.log(res);\r\n      // var jsonResponse = await res.json();\r\n      // console.log(jsonResponse);\r\n  \r\n      // var details = {\r\n      //   'client_id': \"5404d196-ed30-4a60-be91-03a30990f73b\",\r\n      //   'scope': \"Calendars.ReadWrite\",\r\n      //   'client_secret': \"\",\r\n      //   'grant_type': \"authorization_code\",\r\n      //   'redirect_uri': \"http://localhost\", \r\n      //   'code': \"\"\r\n      // };\r\n      \r\n      // var formBody = [];\r\n      // for (var property in details) {\r\n      //   var encodedKey = encodeURIComponent(property);\r\n      //   var encodedValue = encodeURIComponent(details[property]);\r\n      //   formBody.push(encodedKey + \"=\" + encodedValue);\r\n      // }\r\n      // formBody = formBody.join(\"&\");\r\n  \r\n      // const options = {\r\n      //   method: \"POST\",\r\n      //   body: formBody,\r\n      //   headers: {\r\n      //     \"Content-type\": \"application/x-www-form-urlencoded\"\r\n      //   }\r\n      // }\r\n  \r\n      // var tokenEndPoint = \"https://login.microsoftonline.com/72f988bf-86f1-41af-91ab-2d7cd011db47/oauth2/v2.0/token\";\r\n      // var res = await fetch(tokenEndPoint, options);\r\n      // console.log(res);\r\n  \r\n      // Paste Token from Graph Explorer Access Token tab until the generating auth token part above is complete\r\n      return \"\";\r\n    }\r\n\r\n\r\n\r\n\r\n  return (\r\n      <div className = \"container\">\r\n        <div className = \"row\">\r\n            <Card>\r\n                <Card.Body>\r\n                    <Card.Title>My Configurations\r\n                    </Card.Title><hr></hr>\r\n                    <Form>\r\n                        <Card.Text>\r\n                            \r\n                                <b>Autobook into Calendar</b>\r\n                                <span class = \"titleline\"></span>\r\n                                 <label class=\"switch\">\r\n                                     <input type=\"checkbox\" id=\"expand\" onChange={openConfig} />\r\n                                     <span class=\"slider round\"></span>\r\n                                 </label>\r\n                             <br />\r\n                             <div id=\"text\" style={{display: \"none\"}}>\r\n                                    Set a schedule for when MyActivity is active <br /> <br />\r\n                                    <b> Active Days </b> <br />\r\n                                \r\n                                <input type=\"checkbox\" id=\"sunday\" checked={Sunday} onClick={handleSunday}/>\r\n                                &nbsp; Sun &nbsp; &nbsp;\r\n                                 <input type=\"checkbox\" id=\"monday\" defaultChecked={true} onClick={handleMonday} />\r\n                                 &nbsp;   Mon &nbsp;&nbsp;\r\n                                <input type=\"checkbox\" id=\"tuesday\" defaultChecked={true} onClick={handleTuesday} />\r\n                                &nbsp;   Tues &nbsp;&nbsp;\r\n                                <input type=\"checkbox\" id=\"wednesday\" defaultChecked={true} onClick={handleWednesday} />\r\n                                &nbsp;   Wed &nbsp;&nbsp;\r\n                                <input type=\"checkbox\" id=\"thursday\" defaultChecked={true} onClick={handleThursday} />\r\n                                &nbsp;   Thurs &nbsp;&nbsp;\r\n                                <input type=\"checkbox\" id=\"friday\" defaultChecked={true} onClick={handleFriday} />\r\n                                &nbsp;   Fri &nbsp;&nbsp;\r\n                                <input type=\"checkbox\" id=\"saturday\" onClick={handleSaturday} />\r\n                                &nbsp;  Sat &nbsp;&nbsp;\r\n                                <br /> <br />\r\n                                <b> Active Hours </b> <br />\r\n                                Start time &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; End time <br />\r\n                                <select name=\"start time\" id=\"startTime\" onChange={() => setStartTime(handleStartTime)}>\r\n                                    <option value=\"00\">12:00 am</option>\r\n                                    <option value=\"01\">1:00 am</option>\r\n                                    <option value=\"02\">2:00 am</option>\r\n                                    <option value=\"03\">3:00 am</option>\r\n                                    <option value=\"04\">4:00 am</option>\r\n                                    <option value=\"05\">5:00 am</option>\r\n                                    <option value=\"06\">6:00 am</option>\r\n                                    <option value=\"07\">7:00 am</option>\r\n                                    <option value=\"08\" selected=\"selected\">8:00 am</option>\r\n                                    <option value=\"09\">9:00 am</option>\r\n                                    <option value=\"10\">10:00 am</option>\r\n                                    <option value=\"11\">11:00 am</option>\r\n                                    <option value=\"12\">12:00 am</option>\r\n                                    <option value=\"13\">1:00 pm</option>\r\n                                    <option value=\"14\">2:00 pm</option>\r\n                                    <option value=\"15\">3:00 pm</option>\r\n                                    <option value=\"16\">4:00 pm</option>\r\n                                    <option value=\"17\">5:00 pm</option>\r\n                                    <option value=\"18\">6:00 pm</option>\r\n                                    <option value=\"19\">7:00 pm</option>\r\n                                    <option value=\"20\">8:00 pm</option>\r\n                                    <option value=\"21\">9:00 pm</option>\r\n                                    <option value=\"22\">10:00 pm</option>\r\n                                    <option value=\"23\">11:00 pm</option>\r\n                                </select>\r\n                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                                <select name=\"end time\" id=\"endTime\" onChange={() => setEndTime(handleEndTime)}>\r\n                                <option value=\"00\">12:00 am</option>\r\n                                    <option value=\"01\">1:00 am</option>\r\n                                    <option value=\"02\">2:00 am</option>\r\n                                    <option value=\"03\">3:00 am</option>\r\n                                    <option value=\"04\">4:00 am</option>\r\n                                    <option value=\"05\">5:00 am</option>\r\n                                    <option value=\"06\">6:00 am</option>\r\n                                    <option value=\"07\">7:00 am</option>\r\n                                    <option value=\"08\" >8:00 am</option>\r\n                                    <option value=\"09\">9:00 am</option>\r\n                                    <option value=\"10\">10:00 am</option>\r\n                                    <option value=\"11\">11:00 am</option>\r\n                                    <option value=\"12\">12:00 am</option>\r\n                                    <option value=\"13\">1:00 pm</option>\r\n                                    <option value=\"14\">2:00 pm</option>\r\n                                    <option value=\"15\">3:00 pm</option>\r\n                                    <option value=\"16\">4:00 pm</option>\r\n                                    <option value=\"17\" selected=\"selected\">5:00 pm</option>\r\n                                    <option value=\"18\">6:00 pm</option>\r\n                                    <option value=\"19\">7:00 pm</option>\r\n                                    <option value=\"20\">8:00 pm</option>\r\n                                    <option value=\"21\">9:00 pm</option>\r\n                                    <option value=\"22\">10:00 pm</option>\r\n                                    <option value=\"23\">11:00 pm</option>\r\n                                </select>\r\n                                <br /> <br />\r\n                                <b> Active Duration </b> <br />\r\n                                <select name=\"activity duration\" id=\"activityDuration\" onChange={() => setDuration(handleDuration)}>\r\n                                    <option value=\"15min\" selected=\"selected\">15 min</option>\r\n                                    <option value=\"30min\">30 min</option>\r\n                                    <option value=\"45min\">45 min</option>\r\n                                    <option value=\"1hr\">1 hr</option>\r\n                                </select>\r\n                                < br /> < br />\r\n                                <button id=\"fetch\" onClick={fetchData}>\r\n                                    Fetch My Calendar Data and Create Activity Events\r\n                                </button>\r\n                             </div>\r\n                             \r\n                             \r\n                        </Card.Text>\r\n                        \r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nfunction openConfig() {\r\n  var checkBox = document.getElementById(\"expand\");\r\n  var text = document.getElementById(\"text\");\r\n\r\n  if (checkBox.checked == true){\r\n    text.style.display = \"block\";\r\n    const Autobook = true;\r\n    console.log(\"Autobook is \" + Autobook);\r\n    \r\n  } else {\r\n    text.style.display = \"none\";\r\n    const Autobook = false;\r\n    console.log(\"Autobook is \" + Autobook);\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default ConfigTile;\r\n"]},"metadata":{},"sourceType":"module"}