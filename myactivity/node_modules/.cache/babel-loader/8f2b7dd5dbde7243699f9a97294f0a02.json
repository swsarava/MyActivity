{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\taghos\\\\source\\\\experiments\\\\MyActivity\\\\myactivity\\\\src\\\\App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nfunction App() {\n  const fetchData = async (startHour, endHour) => {\n    try {\n      var datePrefix = new Date().toISOString().substring(0, 11);\n      var startTime = '2020-07-30T15:00:00.0000000';\n      var endTime = '2020-07-30T23:59:00.0000000'; // TODO: Get current time to identify start and end work hours\n\n      let getCalendarEventsUrl = \"https://graph.microsoft.com/v1.0/me/calendarView?startDateTime=\" + startTime + \"&endDateTime=\" + endTime + \"&$select=subject,start,end\"; // TODO: Call Login API to fetch Auth Token\n\n      const options = {\n        headers: {\n          \"Authorization\": \"eyJ0eXAiOiJKV1QiLCJub25jZSI6ImphN1ZoMF8tQlRqbThTUkVDTXU1NEh0bkxIaEg5RkdWTlE2Z3hheXdOTm8iLCJhbGciOiJSUzI1NiIsIng1dCI6Imh1Tjk1SXZQZmVocTM0R3pCRFoxR1hHaXJuTSIsImtpZCI6Imh1Tjk1SXZQZmVocTM0R3pCRFoxR1hHaXJuTSJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC83MmY5ODhiZi04NmYxLTQxYWYtOTFhYi0yZDdjZDAxMWRiNDcvIiwiaWF0IjoxNTk1OTYzMDI4LCJuYmYiOjE1OTU5NjMwMjgsImV4cCI6MTU5NTk2NjkyOCwiYWNjdCI6MCwiYWNyIjoiMSIsImFpbyI6IkFYUUFpLzhRQUFBQUNlb3lza3ZjNjdIakhhWVVHa0IvazVaRUpRNzFWL2g2a2tSRXppSDhJc0NCQXlheWxjcXdFa2NoZk4vYkxyQjNHZ2JMNmhYU1VmUXhuZXRtdmF2ajBTZkplZkErZTZDdWZZenMyNXUwQy9YclFWcDNzUW5GQkk2Y0RHNjR0Y3Zhdmd2cThydUI2OFdxZDZxTExOVTJSdz09IiwiYW1yIjpbInJzYSIsIm1mYSJdLCJhcHBfZGlzcGxheW5hbWUiOiJHcmFwaCBleHBsb3JlciAob2ZmaWNpYWwgc2l0ZSkiLCJhcHBpZCI6ImRlOGJjOGI1LWQ5ZjktNDhiMS1hOGFkLWI3NDhkYTcyNTA2NCIsImFwcGlkYWNyIjoiMCIsImRldmljZWlkIjoiNjQ1MTQwMzktN2MxZC00MDhlLWIyZTYtNWJjZjM1ZTJkZDUxIiwiZmFtaWx5X25hbWUiOiJHaG9zaCIsImdpdmVuX25hbWUiOiJUYW5tYXkiLCJpcGFkZHIiOiIyNC4xNi44MC4yNCIsIm5hbWUiOiJUYW5tYXkgR2hvc2giLCJvaWQiOiJhMDJjOWM4OC0zZWFiLTRlZmYtYTllZC05ZjJiMTVhZTIxNDMiLCJvbnByZW1fc2lkIjoiUy0xLTUtMjEtMjEyNzUyMTE4NC0xNjA0MDEyOTIwLTE4ODc5Mjc1MjctMzQwOTAyODUiLCJwbGF0ZiI6IjMiLCJwdWlkIjoiMTAwMzIwMDAzQUIwNjdGQiIsInJoIjoiMC5BUm9BdjRqNWN2R0dyMEdScXkxODBCSGJSN1hJaTk3NTJiRklxSzIzU05weVVHUWFBRUUuIiwic2NwIjoiQ2FsZW5kYXJzLlJlYWRXcml0ZSBDb250YWN0cy5SZWFkV3JpdGUgRGV2aWNlTWFuYWdlbWVudEFwcHMuUmVhZFdyaXRlLkFsbCBEZXZpY2VNYW5hZ2VtZW50Q29uZmlndXJhdGlvbi5SZWFkLkFsbCBEZXZpY2VNYW5hZ2VtZW50Q29uZmlndXJhdGlvbi5SZWFkV3JpdGUuQWxsIERldmljZU1hbmFnZW1lbnRNYW5hZ2VkRGV2aWNlcy5Qcml2aWxlZ2VkT3BlcmF0aW9ucy5BbGwgRGV2aWNlTWFuYWdlbWVudE1hbmFnZWREZXZpY2VzLlJlYWQuQWxsIERldmljZU1hbmFnZW1lbnRNYW5hZ2VkRGV2aWNlcy5SZWFkV3JpdGUuQWxsIERldmljZU1hbmFnZW1lbnRSQkFDLlJlYWQuQWxsIERldmljZU1hbmFnZW1lbnRSQkFDLlJlYWRXcml0ZS5BbGwgRGV2aWNlTWFuYWdlbWVudFNlcnZpY2VDb25maWcuUmVhZC5BbGwgRGV2aWNlTWFuYWdlbWVudFNlcnZpY2VDb25maWcuUmVhZFdyaXRlLkFsbCBEaXJlY3RvcnkuQWNjZXNzQXNVc2VyLkFsbCBEaXJlY3RvcnkuUmVhZFdyaXRlLkFsbCBGaWxlcy5SZWFkV3JpdGUuQWxsIEdyb3VwLlJlYWRXcml0ZS5BbGwgSWRlbnRpdHlSaXNrRXZlbnQuUmVhZC5BbGwgTWFpbC5SZWFkV3JpdGUgTWFpbGJveFNldHRpbmdzLlJlYWRXcml0ZSBOb3Rlcy5SZWFkV3JpdGUuQWxsIG9wZW5pZCBQZW9wbGUuUmVhZCBQcmVzZW5jZS5SZWFkIFByZXNlbmNlLlJlYWQuQWxsIHByb2ZpbGUgUmVwb3J0cy5SZWFkLkFsbCBTaXRlcy5SZWFkV3JpdGUuQWxsIFRhc2tzLlJlYWRXcml0ZSBVc2VyLlJlYWQgVXNlci5SZWFkQmFzaWMuQWxsIFVzZXIuUmVhZFdyaXRlIFVzZXIuUmVhZFdyaXRlLkFsbCBlbWFpbCIsInNpZ25pbl9zdGF0ZSI6WyJkdmNfbW5nZCIsImR2Y19jbXAiLCJrbXNpIl0sInN1YiI6Im1YVHBfbFFMVzYyOGl3OTZfNUJvdkRweEpXakY0blczTTA0dnZJaFhwOUUiLCJ0ZW5hbnRfcmVnaW9uX3Njb3BlIjoiV1ciLCJ0aWQiOiI3MmY5ODhiZi04NmYxLTQxYWYtOTFhYi0yZDdjZDAxMWRiNDciLCJ1bmlxdWVfbmFtZSI6InRhZ2hvc0BtaWNyb3NvZnQuY29tIiwidXBuIjoidGFnaG9zQG1pY3Jvc29mdC5jb20iLCJ1dGkiOiJzS3hydFFtY2wwV2thc084WW1VREFBIiwidmVyIjoiMS4wIiwieG1zX3N0Ijp7InN1YiI6Ilh6aFJlLVp3N29VbXFLZy1QT3FCamFXOUROZ2J3cy1hMzN0RUtCaDEyVEEifSwieG1zX3RjZHQiOjEyODkyNDE1NDd9.UOqyfXQE2SwfqHClSBYXtC_PpfyM0ZajIDl0CExNJJxphICyAkOJ8Ns7ZBpHexAOzBfhy-t3u_HKoRBKSMhuftdpRX4g-_2oCtmR1vDtNPBJhdzuJ0heK8t08s9NZKpRR-f4c71jXaYYJVPx6c7JiGV5iU6Jy5dCneN5FjNCI3MvpXFagkds3ZiKe0mFQ1snOajhNQeSYGRLTF5qn2VE09DBhqx0Yh9vmF7BsVO4ltgqY02D7CFaqN1iESncK8iu9e6Hu_r_kZX2orx3itIUyZetp6Z6F3a4uZlg0UFlqkbmOCgYj-3txt2ZZUXwpkF-xesfd4U8SfuYuJtj__zjFQ\" //Paste Token from Graph Explorer Access Token tab until the generating auth token part is plugged in\n\n        }\n      }; // Fetching user's calendar data for today\n\n      var response = await fetch(getCalendarEventsUrl, options);\n\n      if (response.status >= 300) {\n        throw new Error(response.statusText);\n      }\n\n      var body = await response.json();\n      var events = body.value;\n      let startTimes = [];\n      let endTimes = [];\n      let i = 0;\n      events.forEach(element => {\n        startTimes[i] = new Date(element.start.dateTime);\n        endTimes[i] = new Date(element.end.dateTime);\n        console.log(element.subject + \" : \" + startTimes[i] + \" to \" + endTimes[i]);\n        i++;\n      });\n      startTimes.sort((a, b) => a - b);\n      endTimes.sort((a, b) => a - b);\n      let k;\n\n      for (k = 0; k < startTimes.length; k++) {\n        console.log(startTimes[k] + \" to \" + endTimes[k]);\n      }\n\n      let maxDiff = new Date(startTimes[0]) - new Date(startTime);\n      let interval = 0;\n      let j;\n\n      for (j = 1; j < startTimes.length; j++) {\n        var diff = new Date(startTimes[j]) - new Date(endTimes[j - 1]);\n        console.log(diff + \" : \" + maxDiff);\n\n        if (diff > maxDiff) {\n          // calculate max diff in hrs\n          maxDiff = diff;\n          interval = j;\n        }\n      }\n\n      console.log(maxDiff);\n      console.log(new Date(endTimes[interval - 1]).getHours());\n      var activityStartTime = (interval === 0 ? 15 : new Date(endTimes[interval - 1]).getHours()) + 1;\n      console.log(\"Active time start: \" + interval + \" : \" + activityStartTime); // TODO: Scheduling algorithm to indentify free times from the calendar\n    } catch (error) {\n      console.log(\"Error in fetching calendar data: \" + error.message);\n    }\n  };\n\n  const createEvent = async () => {\n    try {\n      let addEventUrl = \"https://graph.microsoft.com/v1.0/me/events\"; // TODO: Call Login API to fetch Auth Token\n\n      const options = {\n        method: \"POST\",\n        body: JSON.stringify({\n          subject: \"Some Activity\",\n          start: {\n            dateTime: \"2020-07-27T17:00:00.000\",\n            timeZone: \"Pacific Standard Time\"\n          },\n          end: {\n            dateTime: \"2020-07-27T17:30:00.000\",\n            timeZone: \"Pacific Standard Time\"\n          },\n          responseRequested: true,\n          allowNewTimeProposals: true\n        }),\n        headers: {\n          \"Content-type\": \"application/json\",\n          \"Authorization\": \"eyJ0eXAiOiJKV1QiLCJub25jZSI6IkVpa2l4UmZiUjhfc1pZN0s4ellEWXRaSGstbEFIRHVwMEd1ZzNFOHpneFUiLCJhbGciOiJSUzI1NiIsIng1dCI6Imh1Tjk1SXZQZmVocTM0R3pCRFoxR1hHaXJuTSIsImtpZCI6Imh1Tjk1SXZQZmVocTM0R3pCRFoxR1hHaXJuTSJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC83MmY5ODhiZi04NmYxLTQxYWYtOTFhYi0yZDdjZDAxMWRiNDcvIiwiaWF0IjoxNTk1ODkwOTA5LCJuYmYiOjE1OTU4OTA5MDksImV4cCI6MTU5NTg5NDgwOSwiYWNjdCI6MCwiYWNyIjoiMSIsImFpbyI6IkFYUUFpLzhRQUFBQWJFVmR2SXZMVGFVVkpoT3MvZVpJT1VkV1A4dnFraGRrcXVKSytEdTFiOTBETjB1QUhyYzA3azFPeXhWa2YrOTNiSHdPMW5zL1hkQ2VMNjQ2c1FlNnpWVE5JSzZ0Snkrbit6WXNkNUVWbHpvV2Fpb3FRbzlTcTVnMi9FMHJrTTJSMCtKYUhXcHlySFY0UjRydmNaM2Vhdz09IiwiYW1yIjpbInJzYSIsIm1mYSJdLCJhcHBfZGlzcGxheW5hbWUiOiJHcmFwaCBleHBsb3JlciAob2ZmaWNpYWwgc2l0ZSkiLCJhcHBpZCI6ImRlOGJjOGI1LWQ5ZjktNDhiMS1hOGFkLWI3NDhkYTcyNTA2NCIsImFwcGlkYWNyIjoiMCIsImRldmljZWlkIjoiNjQ1MTQwMzktN2MxZC00MDhlLWIyZTYtNWJjZjM1ZTJkZDUxIiwiZmFtaWx5X25hbWUiOiJHaG9zaCIsImdpdmVuX25hbWUiOiJUYW5tYXkiLCJpcGFkZHIiOiIyNC4xNi44MC4yNCIsIm5hbWUiOiJUYW5tYXkgR2hvc2giLCJvaWQiOiJhMDJjOWM4OC0zZWFiLTRlZmYtYTllZC05ZjJiMTVhZTIxNDMiLCJvbnByZW1fc2lkIjoiUy0xLTUtMjEtMjEyNzUyMTE4NC0xNjA0MDEyOTIwLTE4ODc5Mjc1MjctMzQwOTAyODUiLCJwbGF0ZiI6IjMiLCJwdWlkIjoiMTAwMzIwMDAzQUIwNjdGQiIsInJoIjoiMC5BUm9BdjRqNWN2R0dyMEdScXkxODBCSGJSN1hJaTk3NTJiRklxSzIzU05weVVHUWFBRUUuIiwic2NwIjoiQ2FsZW5kYXJzLlJlYWRXcml0ZSBDb250YWN0cy5SZWFkV3JpdGUgRGV2aWNlTWFuYWdlbWVudEFwcHMuUmVhZFdyaXRlLkFsbCBEZXZpY2VNYW5hZ2VtZW50Q29uZmlndXJhdGlvbi5SZWFkLkFsbCBEZXZpY2VNYW5hZ2VtZW50Q29uZmlndXJhdGlvbi5SZWFkV3JpdGUuQWxsIERldmljZU1hbmFnZW1lbnRNYW5hZ2VkRGV2aWNlcy5Qcml2aWxlZ2VkT3BlcmF0aW9ucy5BbGwgRGV2aWNlTWFuYWdlbWVudE1hbmFnZWREZXZpY2VzLlJlYWQuQWxsIERldmljZU1hbmFnZW1lbnRNYW5hZ2VkRGV2aWNlcy5SZWFkV3JpdGUuQWxsIERldmljZU1hbmFnZW1lbnRSQkFDLlJlYWQuQWxsIERldmljZU1hbmFnZW1lbnRSQkFDLlJlYWRXcml0ZS5BbGwgRGV2aWNlTWFuYWdlbWVudFNlcnZpY2VDb25maWcuUmVhZC5BbGwgRGV2aWNlTWFuYWdlbWVudFNlcnZpY2VDb25maWcuUmVhZFdyaXRlLkFsbCBEaXJlY3RvcnkuQWNjZXNzQXNVc2VyLkFsbCBEaXJlY3RvcnkuUmVhZFdyaXRlLkFsbCBGaWxlcy5SZWFkV3JpdGUuQWxsIEdyb3VwLlJlYWRXcml0ZS5BbGwgSWRlbnRpdHlSaXNrRXZlbnQuUmVhZC5BbGwgTWFpbC5SZWFkV3JpdGUgTWFpbGJveFNldHRpbmdzLlJlYWRXcml0ZSBOb3Rlcy5SZWFkV3JpdGUuQWxsIG9wZW5pZCBQZW9wbGUuUmVhZCBQcmVzZW5jZS5SZWFkIFByZXNlbmNlLlJlYWQuQWxsIHByb2ZpbGUgUmVwb3J0cy5SZWFkLkFsbCBTaXRlcy5SZWFkV3JpdGUuQWxsIFRhc2tzLlJlYWRXcml0ZSBVc2VyLlJlYWQgVXNlci5SZWFkQmFzaWMuQWxsIFVzZXIuUmVhZFdyaXRlIFVzZXIuUmVhZFdyaXRlLkFsbCBlbWFpbCIsInNpZ25pbl9zdGF0ZSI6WyJkdmNfbW5nZCIsImR2Y19jbXAiLCJrbXNpIl0sInN1YiI6Im1YVHBfbFFMVzYyOGl3OTZfNUJvdkRweEpXakY0blczTTA0dnZJaFhwOUUiLCJ0ZW5hbnRfcmVnaW9uX3Njb3BlIjoiV1ciLCJ0aWQiOiI3MmY5ODhiZi04NmYxLTQxYWYtOTFhYi0yZDdjZDAxMWRiNDciLCJ1bmlxdWVfbmFtZSI6InRhZ2hvc0BtaWNyb3NvZnQuY29tIiwidXBuIjoidGFnaG9zQG1pY3Jvc29mdC5jb20iLCJ1dGkiOiItUFNnM2JpcXYwdWVPcjhUM0pkM0FBIiwidmVyIjoiMS4wIiwieG1zX3N0Ijp7InN1YiI6Ilh6aFJlLVp3N29VbXFLZy1QT3FCamFXOUROZ2J3cy1hMzN0RUtCaDEyVEEifSwieG1zX3RjZHQiOjEyODkyNDE1NDd9.vJHo2iu0Oa4vjnk2VxaztkySgnVE2qW7GHvh0KRGy53PI63pwYtIiC69z5meU6d-z1QBE7w_3u95oaIEOJyTxcoUIP7zUoOeHPQabQFEZuO7DOTsuxBmJRPP1q9EVZM-buTWtSvAm-I5IxGL04eraWaZItA17Uvdl4PjZgVeAHC4nirAptafEQmmhAOzFr-94HR_oX9MGcrb3MBcuqMZbcCX9lZ5GcxjaofXc73fc-txJF0L8MP98npc-39vA07MdDv2zJ1ba4iIPCOc7fe9UPcd24o12j44Mag4fb_8emAAxMhF_i65emAg0ZlxXvu2D1XPPrmCXGvJDNV0mavwSg\" //Paste Token from Graph Explorer Access Token tab until the generating auth token part is plugged in\n\n        }\n      }; // TODO: Create calendar event for an identified free time\n\n      var response = await fetch(addEventUrl, options);\n      console.log(response);\n\n      if (response.status >= 300) {\n        throw new Error(response.statusText);\n      }\n    } catch (error) {\n      console.log(\"Error in creating calendar event: \" + error.message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"App-link\",\n    href: \"https://reactjs.org\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, \"Learn React\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"fetch\",\n    onClick: fetchData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, \"Fetch My Calendar Data\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"create\",\n    onClick: createEvent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, \"Create an Event in my Calendar\"))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/taghos/source/experiments/MyActivity/myactivity/src/App.js"],"names":["React","App","fetchData","startHour","endHour","datePrefix","Date","toISOString","substring","startTime","endTime","getCalendarEventsUrl","options","headers","response","fetch","status","Error","statusText","body","json","events","value","startTimes","endTimes","i","forEach","element","start","dateTime","end","console","log","subject","sort","a","b","k","length","maxDiff","interval","j","diff","getHours","activityStartTime","error","message","createEvent","addEventUrl","method","JSON","stringify","timeZone","responseRequested","allowNewTimeProposals"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const fetchData = async (startHour, endHour) => {\r\n    try {\r\n      var datePrefix = new Date().toISOString().substring(0, 11);\r\n      var startTime = '2020-07-30T15:00:00.0000000';\r\n      var endTime = '2020-07-30T23:59:00.0000000';\r\n      // TODO: Get current time to identify start and end work hours\r\n      let getCalendarEventsUrl = \"https://graph.microsoft.com/v1.0/me/calendarView?startDateTime=\" + startTime + \"&endDateTime=\" + endTime + \"&$select=subject,start,end\";\r\n\r\n      // TODO: Call Login API to fetch Auth Token\r\n\r\n      const options = {\r\n        headers: {\r\n        \"Authorization\": \"eyJ0eXAiOiJKV1QiLCJub25jZSI6ImphN1ZoMF8tQlRqbThTUkVDTXU1NEh0bkxIaEg5RkdWTlE2Z3hheXdOTm8iLCJhbGciOiJSUzI1NiIsIng1dCI6Imh1Tjk1SXZQZmVocTM0R3pCRFoxR1hHaXJuTSIsImtpZCI6Imh1Tjk1SXZQZmVocTM0R3pCRFoxR1hHaXJuTSJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC83MmY5ODhiZi04NmYxLTQxYWYtOTFhYi0yZDdjZDAxMWRiNDcvIiwiaWF0IjoxNTk1OTYzMDI4LCJuYmYiOjE1OTU5NjMwMjgsImV4cCI6MTU5NTk2NjkyOCwiYWNjdCI6MCwiYWNyIjoiMSIsImFpbyI6IkFYUUFpLzhRQUFBQUNlb3lza3ZjNjdIakhhWVVHa0IvazVaRUpRNzFWL2g2a2tSRXppSDhJc0NCQXlheWxjcXdFa2NoZk4vYkxyQjNHZ2JMNmhYU1VmUXhuZXRtdmF2ajBTZkplZkErZTZDdWZZenMyNXUwQy9YclFWcDNzUW5GQkk2Y0RHNjR0Y3Zhdmd2cThydUI2OFdxZDZxTExOVTJSdz09IiwiYW1yIjpbInJzYSIsIm1mYSJdLCJhcHBfZGlzcGxheW5hbWUiOiJHcmFwaCBleHBsb3JlciAob2ZmaWNpYWwgc2l0ZSkiLCJhcHBpZCI6ImRlOGJjOGI1LWQ5ZjktNDhiMS1hOGFkLWI3NDhkYTcyNTA2NCIsImFwcGlkYWNyIjoiMCIsImRldmljZWlkIjoiNjQ1MTQwMzktN2MxZC00MDhlLWIyZTYtNWJjZjM1ZTJkZDUxIiwiZmFtaWx5X25hbWUiOiJHaG9zaCIsImdpdmVuX25hbWUiOiJUYW5tYXkiLCJpcGFkZHIiOiIyNC4xNi44MC4yNCIsIm5hbWUiOiJUYW5tYXkgR2hvc2giLCJvaWQiOiJhMDJjOWM4OC0zZWFiLTRlZmYtYTllZC05ZjJiMTVhZTIxNDMiLCJvbnByZW1fc2lkIjoiUy0xLTUtMjEtMjEyNzUyMTE4NC0xNjA0MDEyOTIwLTE4ODc5Mjc1MjctMzQwOTAyODUiLCJwbGF0ZiI6IjMiLCJwdWlkIjoiMTAwMzIwMDAzQUIwNjdGQiIsInJoIjoiMC5BUm9BdjRqNWN2R0dyMEdScXkxODBCSGJSN1hJaTk3NTJiRklxSzIzU05weVVHUWFBRUUuIiwic2NwIjoiQ2FsZW5kYXJzLlJlYWRXcml0ZSBDb250YWN0cy5SZWFkV3JpdGUgRGV2aWNlTWFuYWdlbWVudEFwcHMuUmVhZFdyaXRlLkFsbCBEZXZpY2VNYW5hZ2VtZW50Q29uZmlndXJhdGlvbi5SZWFkLkFsbCBEZXZpY2VNYW5hZ2VtZW50Q29uZmlndXJhdGlvbi5SZWFkV3JpdGUuQWxsIERldmljZU1hbmFnZW1lbnRNYW5hZ2VkRGV2aWNlcy5Qcml2aWxlZ2VkT3BlcmF0aW9ucy5BbGwgRGV2aWNlTWFuYWdlbWVudE1hbmFnZWREZXZpY2VzLlJlYWQuQWxsIERldmljZU1hbmFnZW1lbnRNYW5hZ2VkRGV2aWNlcy5SZWFkV3JpdGUuQWxsIERldmljZU1hbmFnZW1lbnRSQkFDLlJlYWQuQWxsIERldmljZU1hbmFnZW1lbnRSQkFDLlJlYWRXcml0ZS5BbGwgRGV2aWNlTWFuYWdlbWVudFNlcnZpY2VDb25maWcuUmVhZC5BbGwgRGV2aWNlTWFuYWdlbWVudFNlcnZpY2VDb25maWcuUmVhZFdyaXRlLkFsbCBEaXJlY3RvcnkuQWNjZXNzQXNVc2VyLkFsbCBEaXJlY3RvcnkuUmVhZFdyaXRlLkFsbCBGaWxlcy5SZWFkV3JpdGUuQWxsIEdyb3VwLlJlYWRXcml0ZS5BbGwgSWRlbnRpdHlSaXNrRXZlbnQuUmVhZC5BbGwgTWFpbC5SZWFkV3JpdGUgTWFpbGJveFNldHRpbmdzLlJlYWRXcml0ZSBOb3Rlcy5SZWFkV3JpdGUuQWxsIG9wZW5pZCBQZW9wbGUuUmVhZCBQcmVzZW5jZS5SZWFkIFByZXNlbmNlLlJlYWQuQWxsIHByb2ZpbGUgUmVwb3J0cy5SZWFkLkFsbCBTaXRlcy5SZWFkV3JpdGUuQWxsIFRhc2tzLlJlYWRXcml0ZSBVc2VyLlJlYWQgVXNlci5SZWFkQmFzaWMuQWxsIFVzZXIuUmVhZFdyaXRlIFVzZXIuUmVhZFdyaXRlLkFsbCBlbWFpbCIsInNpZ25pbl9zdGF0ZSI6WyJkdmNfbW5nZCIsImR2Y19jbXAiLCJrbXNpIl0sInN1YiI6Im1YVHBfbFFMVzYyOGl3OTZfNUJvdkRweEpXakY0blczTTA0dnZJaFhwOUUiLCJ0ZW5hbnRfcmVnaW9uX3Njb3BlIjoiV1ciLCJ0aWQiOiI3MmY5ODhiZi04NmYxLTQxYWYtOTFhYi0yZDdjZDAxMWRiNDciLCJ1bmlxdWVfbmFtZSI6InRhZ2hvc0BtaWNyb3NvZnQuY29tIiwidXBuIjoidGFnaG9zQG1pY3Jvc29mdC5jb20iLCJ1dGkiOiJzS3hydFFtY2wwV2thc084WW1VREFBIiwidmVyIjoiMS4wIiwieG1zX3N0Ijp7InN1YiI6Ilh6aFJlLVp3N29VbXFLZy1QT3FCamFXOUROZ2J3cy1hMzN0RUtCaDEyVEEifSwieG1zX3RjZHQiOjEyODkyNDE1NDd9.UOqyfXQE2SwfqHClSBYXtC_PpfyM0ZajIDl0CExNJJxphICyAkOJ8Ns7ZBpHexAOzBfhy-t3u_HKoRBKSMhuftdpRX4g-_2oCtmR1vDtNPBJhdzuJ0heK8t08s9NZKpRR-f4c71jXaYYJVPx6c7JiGV5iU6Jy5dCneN5FjNCI3MvpXFagkds3ZiKe0mFQ1snOajhNQeSYGRLTF5qn2VE09DBhqx0Yh9vmF7BsVO4ltgqY02D7CFaqN1iESncK8iu9e6Hu_r_kZX2orx3itIUyZetp6Z6F3a4uZlg0UFlqkbmOCgYj-3txt2ZZUXwpkF-xesfd4U8SfuYuJtj__zjFQ\" //Paste Token from Graph Explorer Access Token tab until the generating auth token part is plugged in\r\n        }\r\n      };\r\n\r\n      // Fetching user's calendar data for today\r\n      var response = await fetch(getCalendarEventsUrl, options);\r\n      if(response.status >= 300) {\r\n        throw new Error(response.statusText);\r\n      }\r\n\r\n      var body = await response.json();\r\n      var events = body.value;\r\n\r\n      let startTimes = [];\r\n      let endTimes = [];\r\n      let i = 0;\r\n\r\n      events.forEach(element => {\r\n        startTimes[i] = new Date(element.start.dateTime);\r\n        endTimes[i] = new Date(element.end.dateTime);\r\n        console.log(element.subject + \" : \" + startTimes[i] + \" to \" + endTimes[i]);\r\n        i++;\r\n      });\r\n\r\n      startTimes.sort((a,b) => a-b);\r\n      endTimes.sort((a,b) => a-b);\r\n\r\n      let k;\r\n      for(k=0; k<startTimes.length; k++) {\r\n        console.log(startTimes[k] + \" to \" + endTimes[k]);\r\n      }\r\n\r\n      let maxDiff = new Date(startTimes[0]) - new Date(startTime);\r\n\r\n      let interval = 0;\r\n      let j;\r\n      for(j=1; j<startTimes.length; j++) {\r\n        var diff = new Date(startTimes[j]) - new Date(endTimes[j-1]);\r\n        console.log(diff + \" : \" + maxDiff);\r\n        if(diff > maxDiff) {\r\n          // calculate max diff in hrs\r\n          maxDiff = diff;\r\n          interval = j;\r\n        }\r\n      }\r\n\r\n      console.log(maxDiff);\r\n      console.log(new Date(endTimes[interval-1]).getHours());\r\n      var activityStartTime = (interval === 0 ? 15 : new Date(endTimes[interval-1]).getHours()) + 1;\r\n      console.log(\"Active time start: \" + interval + \" : \" + activityStartTime);\r\n\r\n      // TODO: Scheduling algorithm to indentify free times from the calendar\r\n    } catch (error) {\r\n      console.log(\"Error in fetching calendar data: \" + error.message);\r\n    }\r\n  }\r\n    \r\n  const createEvent = async () => {\r\n    try {\r\n      let addEventUrl = \"https://graph.microsoft.com/v1.0/me/events\";\r\n\r\n      // TODO: Call Login API to fetch Auth Token\r\n\r\n      const options = {\r\n        method: \"POST\",\r\n        body: JSON.stringify(\r\n          {  \r\n            subject: \"Some Activity\",\r\n            start: {\r\n              dateTime: \"2020-07-27T17:00:00.000\",\r\n              timeZone: \"Pacific Standard Time\"\r\n            },\r\n            end: {\r\n              dateTime: \"2020-07-27T17:30:00.000\",\r\n              timeZone: \"Pacific Standard Time\"\r\n            },\r\n            responseRequested: true,\r\n            allowNewTimeProposals: true\r\n          }\r\n        ),\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          \"Authorization\": \"eyJ0eXAiOiJKV1QiLCJub25jZSI6IkVpa2l4UmZiUjhfc1pZN0s4ellEWXRaSGstbEFIRHVwMEd1ZzNFOHpneFUiLCJhbGciOiJSUzI1NiIsIng1dCI6Imh1Tjk1SXZQZmVocTM0R3pCRFoxR1hHaXJuTSIsImtpZCI6Imh1Tjk1SXZQZmVocTM0R3pCRFoxR1hHaXJuTSJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC83MmY5ODhiZi04NmYxLTQxYWYtOTFhYi0yZDdjZDAxMWRiNDcvIiwiaWF0IjoxNTk1ODkwOTA5LCJuYmYiOjE1OTU4OTA5MDksImV4cCI6MTU5NTg5NDgwOSwiYWNjdCI6MCwiYWNyIjoiMSIsImFpbyI6IkFYUUFpLzhRQUFBQWJFVmR2SXZMVGFVVkpoT3MvZVpJT1VkV1A4dnFraGRrcXVKSytEdTFiOTBETjB1QUhyYzA3azFPeXhWa2YrOTNiSHdPMW5zL1hkQ2VMNjQ2c1FlNnpWVE5JSzZ0Snkrbit6WXNkNUVWbHpvV2Fpb3FRbzlTcTVnMi9FMHJrTTJSMCtKYUhXcHlySFY0UjRydmNaM2Vhdz09IiwiYW1yIjpbInJzYSIsIm1mYSJdLCJhcHBfZGlzcGxheW5hbWUiOiJHcmFwaCBleHBsb3JlciAob2ZmaWNpYWwgc2l0ZSkiLCJhcHBpZCI6ImRlOGJjOGI1LWQ5ZjktNDhiMS1hOGFkLWI3NDhkYTcyNTA2NCIsImFwcGlkYWNyIjoiMCIsImRldmljZWlkIjoiNjQ1MTQwMzktN2MxZC00MDhlLWIyZTYtNWJjZjM1ZTJkZDUxIiwiZmFtaWx5X25hbWUiOiJHaG9zaCIsImdpdmVuX25hbWUiOiJUYW5tYXkiLCJpcGFkZHIiOiIyNC4xNi44MC4yNCIsIm5hbWUiOiJUYW5tYXkgR2hvc2giLCJvaWQiOiJhMDJjOWM4OC0zZWFiLTRlZmYtYTllZC05ZjJiMTVhZTIxNDMiLCJvbnByZW1fc2lkIjoiUy0xLTUtMjEtMjEyNzUyMTE4NC0xNjA0MDEyOTIwLTE4ODc5Mjc1MjctMzQwOTAyODUiLCJwbGF0ZiI6IjMiLCJwdWlkIjoiMTAwMzIwMDAzQUIwNjdGQiIsInJoIjoiMC5BUm9BdjRqNWN2R0dyMEdScXkxODBCSGJSN1hJaTk3NTJiRklxSzIzU05weVVHUWFBRUUuIiwic2NwIjoiQ2FsZW5kYXJzLlJlYWRXcml0ZSBDb250YWN0cy5SZWFkV3JpdGUgRGV2aWNlTWFuYWdlbWVudEFwcHMuUmVhZFdyaXRlLkFsbCBEZXZpY2VNYW5hZ2VtZW50Q29uZmlndXJhdGlvbi5SZWFkLkFsbCBEZXZpY2VNYW5hZ2VtZW50Q29uZmlndXJhdGlvbi5SZWFkV3JpdGUuQWxsIERldmljZU1hbmFnZW1lbnRNYW5hZ2VkRGV2aWNlcy5Qcml2aWxlZ2VkT3BlcmF0aW9ucy5BbGwgRGV2aWNlTWFuYWdlbWVudE1hbmFnZWREZXZpY2VzLlJlYWQuQWxsIERldmljZU1hbmFnZW1lbnRNYW5hZ2VkRGV2aWNlcy5SZWFkV3JpdGUuQWxsIERldmljZU1hbmFnZW1lbnRSQkFDLlJlYWQuQWxsIERldmljZU1hbmFnZW1lbnRSQkFDLlJlYWRXcml0ZS5BbGwgRGV2aWNlTWFuYWdlbWVudFNlcnZpY2VDb25maWcuUmVhZC5BbGwgRGV2aWNlTWFuYWdlbWVudFNlcnZpY2VDb25maWcuUmVhZFdyaXRlLkFsbCBEaXJlY3RvcnkuQWNjZXNzQXNVc2VyLkFsbCBEaXJlY3RvcnkuUmVhZFdyaXRlLkFsbCBGaWxlcy5SZWFkV3JpdGUuQWxsIEdyb3VwLlJlYWRXcml0ZS5BbGwgSWRlbnRpdHlSaXNrRXZlbnQuUmVhZC5BbGwgTWFpbC5SZWFkV3JpdGUgTWFpbGJveFNldHRpbmdzLlJlYWRXcml0ZSBOb3Rlcy5SZWFkV3JpdGUuQWxsIG9wZW5pZCBQZW9wbGUuUmVhZCBQcmVzZW5jZS5SZWFkIFByZXNlbmNlLlJlYWQuQWxsIHByb2ZpbGUgUmVwb3J0cy5SZWFkLkFsbCBTaXRlcy5SZWFkV3JpdGUuQWxsIFRhc2tzLlJlYWRXcml0ZSBVc2VyLlJlYWQgVXNlci5SZWFkQmFzaWMuQWxsIFVzZXIuUmVhZFdyaXRlIFVzZXIuUmVhZFdyaXRlLkFsbCBlbWFpbCIsInNpZ25pbl9zdGF0ZSI6WyJkdmNfbW5nZCIsImR2Y19jbXAiLCJrbXNpIl0sInN1YiI6Im1YVHBfbFFMVzYyOGl3OTZfNUJvdkRweEpXakY0blczTTA0dnZJaFhwOUUiLCJ0ZW5hbnRfcmVnaW9uX3Njb3BlIjoiV1ciLCJ0aWQiOiI3MmY5ODhiZi04NmYxLTQxYWYtOTFhYi0yZDdjZDAxMWRiNDciLCJ1bmlxdWVfbmFtZSI6InRhZ2hvc0BtaWNyb3NvZnQuY29tIiwidXBuIjoidGFnaG9zQG1pY3Jvc29mdC5jb20iLCJ1dGkiOiItUFNnM2JpcXYwdWVPcjhUM0pkM0FBIiwidmVyIjoiMS4wIiwieG1zX3N0Ijp7InN1YiI6Ilh6aFJlLVp3N29VbXFLZy1QT3FCamFXOUROZ2J3cy1hMzN0RUtCaDEyVEEifSwieG1zX3RjZHQiOjEyODkyNDE1NDd9.vJHo2iu0Oa4vjnk2VxaztkySgnVE2qW7GHvh0KRGy53PI63pwYtIiC69z5meU6d-z1QBE7w_3u95oaIEOJyTxcoUIP7zUoOeHPQabQFEZuO7DOTsuxBmJRPP1q9EVZM-buTWtSvAm-I5IxGL04eraWaZItA17Uvdl4PjZgVeAHC4nirAptafEQmmhAOzFr-94HR_oX9MGcrb3MBcuqMZbcCX9lZ5GcxjaofXc73fc-txJF0L8MP98npc-39vA07MdDv2zJ1ba4iIPCOc7fe9UPcd24o12j44Mag4fb_8emAAxMhF_i65emAg0ZlxXvu2D1XPPrmCXGvJDNV0mavwSg\" //Paste Token from Graph Explorer Access Token tab until the generating auth token part is plugged in\r\n        }\r\n      };\r\n\r\n      // TODO: Create calendar event for an identified free time\r\n      var response = await fetch(addEventUrl, options);\r\n      console.log(response);\r\n      if(response.status >= 300) {\r\n        throw new Error(response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in creating calendar event: \" + error.message);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p> */}\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n        <div>\r\n          <button id=\"fetch\" onClick={fetchData}>\r\n            Fetch My Calendar Data\r\n          </button>\r\n          <br/>\r\n          <button id=\"create\" onClick={createEvent}>\r\n            Create an Event in my Calendar\r\n          </button>\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}