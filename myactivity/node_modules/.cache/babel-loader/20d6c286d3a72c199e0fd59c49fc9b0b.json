{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\taghos\\\\source\\\\experiments\\\\MyActivity\\\\myactivity\\\\src\\\\App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nfunction App() {\n  const fetchData = async () => {\n    try {\n      // TODO: Get current time to identify start and end work hours\n      let getCalendarEventsUrl = \"https://graph.microsoft.com/v1.0/me/calendarView?startDateTime=2020-07-27T00:00:00.0000000&endDateTime=2020-07-27T23:59:00.0000000&$select=subject,start,end\"; // TODO: Call Login API to fetch Auth Token\n\n      const options = {\n        headers: {\n          \"Authorization\": \"\" //Paste Token from Graph Explorer Access Token tab until the generating auth token part is plugged in\n\n        }\n      }; // Fetching user's calendar data for today\n\n      var response = await fetch(getCalendarEventsUrl, options);\n\n      if (response.status >= 300) {\n        throw new Error(response.statusText);\n      }\n\n      var body = await response.json();\n      var events = body.value;\n      events.forEach(element => {\n        console.log(element.subject + \" : \" + element.start.dateTime + \" to \" + element.end.dateTime);\n      }); // TODO: Scheduling algorithm to indentify free times from the calendar\n    } catch (error) {\n      console.log(\"Error in fetching calendar data: \" + error.message);\n    }\n  };\n\n  const createEvent = async () => {\n    try {\n      let addEventUrl = \"https://graph.microsoft.com/v1.0/me/events\"; // TODO: Call Login API to fetch Auth Token\n\n      const options = {\n        method: \"POST\",\n        body: JSON.stringify({\n          subject: \"Some Activity\",\n          start: {\n            dateTime: \"2020-07-27T17:00:00.000\",\n            timeZone: \"Pacific Standard Time\"\n          },\n          end: {\n            dateTime: \"2020-07-27T17:30:00.000\",\n            timeZone: \"Pacific Standard Time\"\n          },\n          responseRequested: true,\n          allowNewTimeProposals: true\n        }),\n        headers: {\n          \"Content-type\": \"application/json\",\n          \"Authorization\": \"\" //Paste Token from Graph Explorer Access Token tab until the generating auth token part is plugged in\n\n        }\n      }; // TODO: Create calendar event for an identified free time\n\n      var response = await fetch(addEventUrl, options);\n      console.log(response);\n\n      if (response.status >= 300) {\n        throw new Error(response.statusText);\n      }\n    } catch (error) {\n      console.log(\"Error in creating calendar event: \" + error.message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"App-link\",\n    href: \"https://reactjs.org\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Learn React\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"fetch\",\n    onClick: fetchData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"Fetch My Calendar Data\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"create\",\n    onClick: createEvent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Create an Event in my Calendar\"))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/taghos/source/experiments/MyActivity/myactivity/src/App.js"],"names":["React","App","fetchData","getCalendarEventsUrl","options","headers","response","fetch","status","Error","statusText","body","json","events","value","forEach","element","console","log","subject","start","dateTime","end","error","message","createEvent","addEventUrl","method","JSON","stringify","timeZone","responseRequested","allowNewTimeProposals"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const fetchData = async () => {\r\n    try {\r\n      // TODO: Get current time to identify start and end work hours\r\n      let getCalendarEventsUrl = \"https://graph.microsoft.com/v1.0/me/calendarView?startDateTime=2020-07-27T00:00:00.0000000&endDateTime=2020-07-27T23:59:00.0000000&$select=subject,start,end\";\r\n\r\n      // TODO: Call Login API to fetch Auth Token\r\n\r\n      const options = {\r\n        headers: {\r\n        \"Authorization\": \"\" //Paste Token from Graph Explorer Access Token tab until the generating auth token part is plugged in\r\n        }\r\n      };\r\n\r\n      // Fetching user's calendar data for today\r\n      var response = await fetch(getCalendarEventsUrl, options);\r\n      if(response.status >= 300) {\r\n        throw new Error(response.statusText);\r\n      }\r\n\r\n      var body = await response.json();\r\n      var events = body.value;\r\n      events.forEach(element => {\r\n        console.log(element.subject + \" : \" + element.start.dateTime + \" to \" + element.end.dateTime);\r\n      });\r\n\r\n      // TODO: Scheduling algorithm to indentify free times from the calendar\r\n    } catch (error) {\r\n      console.log(\"Error in fetching calendar data: \" + error.message);\r\n    }\r\n  }\r\n    \r\n  const createEvent = async () => {\r\n    try {\r\n      let addEventUrl = \"https://graph.microsoft.com/v1.0/me/events\";\r\n\r\n      // TODO: Call Login API to fetch Auth Token\r\n\r\n      const options = {\r\n        method: \"POST\",\r\n        body: JSON.stringify(\r\n          {  \r\n            subject: \"Some Activity\",\r\n            start: {\r\n              dateTime: \"2020-07-27T17:00:00.000\",\r\n              timeZone: \"Pacific Standard Time\"\r\n            },\r\n            end: {\r\n              dateTime: \"2020-07-27T17:30:00.000\",\r\n              timeZone: \"Pacific Standard Time\"\r\n            },\r\n            responseRequested: true,\r\n            allowNewTimeProposals: true\r\n          }\r\n        ),\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          \"Authorization\": \"\" //Paste Token from Graph Explorer Access Token tab until the generating auth token part is plugged in\r\n        }\r\n      };\r\n\r\n      // TODO: Create calendar event for an identified free time\r\n      var response = await fetch(addEventUrl, options);\r\n      console.log(response);\r\n      if(response.status >= 300) {\r\n        throw new Error(response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in creating calendar event: \" + error.message);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p> */}\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n        <div>\r\n          <button id=\"fetch\" onClick={fetchData}>\r\n            Fetch My Calendar Data\r\n          </button>\r\n          <br/>\r\n          <button id=\"create\" onClick={createEvent}>\r\n            Create an Event in my Calendar\r\n          </button>\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}