{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\taghos\\\\source\\\\experiments\\\\MyActivity\\\\myactivity\\\\src\\\\StepsGraph.js\";\nimport React from 'react';\nimport './StepsGraph.css';\nimport Paper from '@material-ui/core/Paper';\nimport { Chart, BarSeries, Title, ArgumentAxis, ValueAxis } from './node_modules/@devexpress/dx-react-chart-material-ui';\nimport Async from 'react-async';\nimport { Animation } from '@devexpress/dx-react-chart';\nconst datagraph = [{\n  date: '7/22',\n  steps: 12847\n}, {\n  date: '7/23',\n  steps: 10023\n}, {\n  date: '7/24',\n  steps: 8412\n}, {\n  date: '7/25',\n  steps: 11214\n}, {\n  date: '7/26',\n  steps: 13324\n}, {\n  date: '7/27',\n  steps: 6127\n}, {\n  date: '7/28',\n  steps: 6930\n}]; // const chartData = [];\n\nfunction StepsGraph() {\n  const [date, setDate] = React.useState([]);\n  const [steps, setSteps] = React.useState([]);\n  const [chartData, setChartData] = React.useState([]);\n\n  const getActivityData = async () => {\n    console.log(\"loading data...\");\n\n    try {\n      var url = window.location.href;\n      var access_token;\n\n      if (url !== \"http://localhost:3000/\") {\n        var access_token = url.split(\"#\")[1].split(\"=\")[1].split(\"&\")[0];\n        var userId = url.split(\"#\")[1].split(\"=\")[2].split(\"&\")[0];\n        let getActivityDataUrl = 'https://api.fitbit.com/1/user/-/activities/steps/date/2020-07-20/today.json';\n        const options = {\n          headers: {\n            \"Authorization\": [\"Bearer \" + access_token]\n          }\n        };\n        var response = await fetch(getActivityDataUrl, options);\n\n        if (response.status >= 300) {\n          throw new Error(response.statusText);\n        }\n\n        var data = await response.json();\n        var steps = data['activities-steps'];\n        var dateArray = [];\n        var stepsArray = [];\n        var chartArray = [];\n        var chartData = [];\n        steps.forEach(element => {\n          console.log(element.dateTime + \" : \" + element.value);\n          dateArray.push(element.dateTime);\n          stepsArray.push(element.value);\n          chartArray = {\n            date: element.dateTime,\n            steps: parseInt(element.value)\n          };\n          chartData.push(chartArray);\n        });\n        setDate(date => dateArray);\n        setSteps(steps => stepsArray); // setChartData(chartData => chartArray);\n\n        console.log(chartData);\n        console.log(datagraph);\n        return chartData;\n        /*  var documentLoaded = document.getElementById(\"button\");\r\n         var html = \"<Paper> <Chart data={datagraph}> <ArgumentAxis /> <ValueAxis max={7} /> <BarSeries valueField='steps'  argumentField='date' /><Title text='Steps per day' /><Animation /></Chart></Paper>\";\r\n         var html1 = \"<div><p>hiiii</p></div>\"\r\n         documentLoaded.innerHTML = html; */\n      }\n    } catch (error) {\n      console.log(\"Error in getting Activity data: \" + error.message);\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n\n    /*  <div>\r\n        <button id=\"activity\" onClick={getActivityData}>\r\n         Get Activity data\r\n     </button> */\n    React.createElement(\"div\", {\n      id: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      data: datagraph,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ArgumentAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ValueAxis, {\n      max: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(BarSeries, {\n      valueField: \"steps\",\n      argumentField: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Title, {\n      text: \"Steps per day\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Animation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }))))\n    /* <div className=\"container\">\r\n      <Async promiseFn={getActivityData}>\r\n        {({ data, err, isLoading }) => {\r\n          if (isLoading) return \"Loading...\"\r\n          if (err) return `Something went wrong: ${err.message}`\r\n            if (data)\r\n            return (\r\n              <div>\r\n                <div>\r\n                  GOT DATA BACK\r\n                </div>\r\n                \r\n              </div>\r\n            )\r\n        }}\r\n      </Async>\r\n    </div>  */\n    // </div> \n\n  );\n}\n\nexport default StepsGraph;","map":{"version":3,"sources":["C:/Users/taghos/source/experiments/MyActivity/myactivity/src/StepsGraph.js"],"names":["React","Paper","Chart","BarSeries","Title","ArgumentAxis","ValueAxis","Async","Animation","datagraph","date","steps","StepsGraph","setDate","useState","setSteps","chartData","setChartData","getActivityData","console","log","url","window","location","href","access_token","split","userId","getActivityDataUrl","options","headers","response","fetch","status","Error","statusText","data","json","dateArray","stepsArray","chartArray","forEach","element","dateTime","value","push","parseInt","error","message"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SACEC,KADF,EAEEC,SAFF,EAGEC,KAHF,EAIEC,YAJF,EAKEC,SALF,QAMO,uDANP;AAOA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,SAASC,SAAT,QAA0B,4BAA1B;AAEA,MAAMC,SAAS,GAAG,CAChB;AAAEC,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CADgB,EAEhB;AAAED,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CAFgB,EAGhB;AAAED,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CAHgB,EAIhB;AAAED,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CAJgB,EAKhB;AAAED,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CALgB,EAMhB;AAAED,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CANgB,EAOhB;AAAED,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CAPgB,CAAlB,C,CASA;;AAEA,SAASC,UAAT,GAAsB;AAClB,QAAM,CAACF,IAAD,EAAOG,OAAP,IAAkBb,KAAK,CAACc,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACH,KAAD,EAAQI,QAAR,IAAoBf,KAAK,CAACc,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BjB,KAAK,CAACc,QAAN,CAAe,EAAf,CAAlC;;AAGA,QAAMI,eAAe,GAAG,YAAY;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AACA,QAAI;AACF,UAAIC,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAA1B;AACA,UAAIC,YAAJ;;AACA,UAAIJ,GAAG,KAAK,wBAAZ,EAAsC;AACpC,YAAII,YAAY,GAAGJ,GAAG,CAACK,KAAJ,CAAU,GAAV,EAAe,CAAf,EAAkBA,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,EAAgCA,KAAhC,CAAsC,GAAtC,EAA2C,CAA3C,CAAnB;AACA,YAAIC,MAAM,GAAGN,GAAG,CAACK,KAAJ,CAAU,GAAV,EAAe,CAAf,EAAkBA,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,EAAgCA,KAAhC,CAAsC,GAAtC,EAA2C,CAA3C,CAAb;AAEA,YAAIE,kBAAkB,GAAG,6EAAzB;AAEA,cAAMC,OAAO,GAAG;AACdC,UAAAA,OAAO,EAAE;AACP,6BAAgB,CAAC,YAAYL,YAAb;AADT;AADK,SAAhB;AAMA,YAAIM,QAAQ,GAAG,MAAMC,KAAK,CAACJ,kBAAD,EAAqBC,OAArB,CAA1B;;AAEA,YAAGE,QAAQ,CAACE,MAAT,IAAmB,GAAtB,EAA2B;AACzB,gBAAM,IAAIC,KAAJ,CAAUH,QAAQ,CAACI,UAAnB,CAAN;AACD;;AAED,YAAIC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAjB;AACA,YAAI1B,KAAK,GAAGyB,IAAI,CAAC,kBAAD,CAAhB;AAEA,YAAKE,SAAS,GAAG,EAAjB;AACA,YAAIC,UAAU,GAAG,EAAjB;AACA,YAAIC,UAAU,GAAG,EAAjB;AACA,YAAIxB,SAAS,GAAG,EAAhB;AACAL,QAAAA,KAAK,CAAC8B,OAAN,CAAcC,OAAO,IAAI;AACvBvB,UAAAA,OAAO,CAACC,GAAR,CAAYsB,OAAO,CAACC,QAAR,GAAmB,KAAnB,GAA2BD,OAAO,CAACE,KAA/C;AACAN,UAAAA,SAAS,CAACO,IAAV,CAAeH,OAAO,CAACC,QAAvB;AACAJ,UAAAA,UAAU,CAACM,IAAX,CAAgBH,OAAO,CAACE,KAAxB;AACAJ,UAAAA,UAAU,GAAG;AAAC9B,YAAAA,IAAI,EAAEgC,OAAO,CAACC,QAAf;AAAyBhC,YAAAA,KAAK,EAAEmC,QAAQ,CAACJ,OAAO,CAACE,KAAT;AAAxC,WAAb;AACA5B,UAAAA,SAAS,CAAC6B,IAAV,CAAeL,UAAf;AACD,SAND;AAOA3B,QAAAA,OAAO,CAACH,IAAI,IAAI4B,SAAT,CAAP;AACAvB,QAAAA,QAAQ,CAACJ,KAAK,IAAI4B,UAAV,CAAR,CAjCoC,CAkCpC;;AACApB,QAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYX,SAAZ;AACA,eAAOO,SAAP;AAED;;;;AAOA;AAEF,KAnDD,CAmDE,OAAO+B,KAAP,EAAc;AACd5B,MAAAA,OAAO,CAACC,GAAR,CAAY,qCAAqC2B,KAAK,CAACC,OAAvD;AACD;AACF,GAxDH;;AA6DA;AAAA;;AACG;;;;AAMG;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEvC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAIE,oBAAC,SAAD;AACE,MAAA,UAAU,EAAC,OADb;AAEE,MAAA,aAAa,EAAC,MAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAQE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,eASE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADA,CADF;AAgBN;;;;;;;;;;;;;;;;;AAmBI;;AA1CJ;AAgDH;;AACD,eAAeG,UAAf","sourcesContent":["import React from 'react';\r\nimport './StepsGraph.css';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {\r\n  Chart,\r\n  BarSeries,\r\n  Title,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n} from './node_modules/@devexpress/dx-react-chart-material-ui';\r\nimport Async from 'react-async';\r\n\r\nimport { Animation } from '@devexpress/dx-react-chart';\r\n\r\nconst datagraph = [\r\n  { date: '7/22', steps: 12847 },\r\n  { date: '7/23', steps: 10023 },\r\n  { date: '7/24', steps: 8412 },\r\n  { date: '7/25', steps: 11214 },\r\n  { date: '7/26', steps: 13324 },\r\n  { date: '7/27', steps: 6127 },\r\n  { date: '7/28', steps: 6930 },\r\n];\r\n// const chartData = [];\r\n\r\nfunction StepsGraph() {\r\n    const [date, setDate] = React.useState([]);\r\n    const [steps, setSteps] = React.useState([]);\r\n    const [chartData, setChartData] = React.useState([]);\r\n    \r\n\r\n    const getActivityData = async () => {\r\n        console.log(\"loading data...\");\r\n        try {\r\n          var url = window.location.href;\r\n          var access_token;\r\n          if (url !== \"http://localhost:3000/\") {\r\n            var access_token = url.split(\"#\")[1].split(\"=\")[1].split(\"&\")[0];\r\n            var userId = url.split(\"#\")[1].split(\"=\")[2].split(\"&\")[0]; \r\n    \r\n            let getActivityDataUrl = 'https://api.fitbit.com/1/user/-/activities/steps/date/2020-07-20/today.json';\r\n    \r\n            const options = {\r\n              headers: {\r\n                \"Authorization\":[\"Bearer \" + access_token]\r\n              }\r\n            };\r\n    \r\n            var response = await fetch(getActivityDataUrl, options);\r\n\r\n            if(response.status >= 300) {\r\n              throw new Error(response.statusText);\r\n            }\r\n            \r\n            var data = await response.json();\r\n            var steps = data['activities-steps']\r\n    \r\n            var  dateArray = [];\r\n            var stepsArray = [];\r\n            var chartArray = [];\r\n            var chartData = [];\r\n            steps.forEach(element => {\r\n              console.log(element.dateTime + \" : \" + element.value);\r\n              dateArray.push(element.dateTime);\r\n              stepsArray.push(element.value);\r\n              chartArray = {date: element.dateTime, steps: parseInt(element.value)};\r\n              chartData.push(chartArray);\r\n            });\r\n            setDate(date => dateArray);\r\n            setSteps(steps => stepsArray);\r\n            // setChartData(chartData => chartArray);\r\n            console.log(chartData);\r\n            console.log(datagraph);\r\n            return chartData;\r\n    \r\n           /*  var documentLoaded = document.getElementById(\"button\");\r\n            var html = \"<Paper> <Chart data={datagraph}> <ArgumentAxis /> <ValueAxis max={7} /> <BarSeries valueField='steps'  argumentField='date' /><Title text='Steps per day' /><Animation /></Chart></Paper>\";\r\n            var html1 = \"<div><p>hiiii</p></div>\"\r\n            documentLoaded.innerHTML = html; */\r\n            \r\n            \r\n           \r\n          }\r\n    \r\n        } catch (error) {\r\n          console.log(\"Error in getting Activity data: \" + error.message);\r\n        }\r\n      }\r\n\r\n      \r\n     \r\n\r\n    return (\r\n       /*  <div>\r\n           <button id=\"activity\" onClick={getActivityData}>\r\n            Get Activity data\r\n        </button> */\r\n\r\n        \r\n          <div id=\"button\">\r\n            <Paper>\r\n            <Chart data={datagraph}>\r\n              <ArgumentAxis />\r\n              <ValueAxis max={7} />\r\n    \r\n              <BarSeries\r\n                valueField='steps'\r\n                argumentField='date'\r\n              />\r\n              <Title text='Steps per day' />\r\n              <Animation />\r\n            </Chart>\r\n          </Paper>\r\n        </div>  \r\n\r\n    /* <div className=\"container\">\r\n      <Async promiseFn={getActivityData}>\r\n        {({ data, err, isLoading }) => {\r\n          if (isLoading) return \"Loading...\"\r\n          if (err) return `Something went wrong: ${err.message}`\r\n\r\n          if (data)\r\n            return (\r\n              <div>\r\n                <div>\r\n                  GOT DATA BACK\r\n                </div>\r\n                \r\n              </div>\r\n            )\r\n        }}\r\n      </Async>\r\n    </div>  */\r\n        \r\n        // </div> \r\n        \r\n\r\n    );\r\n\r\n\r\n}\r\nexport default StepsGraph;"]},"metadata":{},"sourceType":"module"}