{"ast":null,"code":"import React, { useEffect, useRef, useReducer, useCallback, useDebugValue, useMemo } from 'react';\n/* istanbul ignore file */\n\n/**\n * Universal global scope object. In the browser this is `self`, in Node.js and React Native it's `global`.\n * This file is excluded from coverage reporting because these globals are environment-specific so we can't test them all.\n */\n\nconst globalScope = (() => {\n  if (typeof self === \"object\" && self.self === self) return self;\n  if (typeof global === \"object\" && global.global === global) return global;\n  if (typeof global === \"object\" && global.GLOBAL === global) return global;\n  return {}; // fallback that relies on imported modules to be singletons\n})();\n/**\n * Globally available object used to connect the DevTools to all React Async instances.\n */\n\n\nglobalScope.__REACT_ASYNC__ = globalScope.__REACT_ASYNC__ || {};\n\nconst noop = () => {};\n\nclass MockAbortController {\n  constructor() {\n    this.abort = noop;\n    this.signal = {};\n  }\n\n}\n\nlet PropTypes;\n\ntry {\n  PropTypes = require(\"prop-types\");\n} catch (e) {}\n\nconst childrenFn = PropTypes && PropTypes.oneOfType([PropTypes.node, PropTypes.func]);\nconst stateObject = PropTypes && PropTypes.shape({\n  initialValue: PropTypes.any,\n  data: PropTypes.any,\n  error: PropTypes.instanceOf(Error),\n  value: PropTypes.any,\n  startedAt: PropTypes.instanceOf(Date),\n  finishedAt: PropTypes.instanceOf(Date),\n  status: PropTypes.oneOf([\"initial\", \"pending\", \"fulfilled\", \"rejected\"]),\n  isInitial: PropTypes.bool,\n  isPending: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  isFulfilled: PropTypes.bool,\n  isResolved: PropTypes.bool,\n  isRejected: PropTypes.bool,\n  isSettled: PropTypes.bool,\n  counter: PropTypes.number,\n  promise: PropTypes.instanceOf(Promise),\n  run: PropTypes.func,\n  reload: PropTypes.func,\n  cancel: PropTypes.func,\n  setData: PropTypes.func,\n  setError: PropTypes.func\n});\nvar propTypes = PropTypes && {\n  Async: {\n    children: childrenFn,\n    promise: PropTypes.instanceOf(Promise),\n    promiseFn: PropTypes.func,\n    deferFn: PropTypes.func,\n    watch: PropTypes.any,\n    watchFn: PropTypes.func,\n    initialValue: PropTypes.any,\n    onResolve: PropTypes.func,\n    onReject: PropTypes.func,\n    reducer: PropTypes.func,\n    dispatcher: PropTypes.func,\n    debugLabel: PropTypes.string,\n    suspense: PropTypes.bool\n  },\n  Initial: {\n    children: childrenFn,\n    state: stateObject.isRequired,\n    persist: PropTypes.bool\n  },\n  Pending: {\n    children: childrenFn,\n    state: stateObject.isRequired,\n    initial: PropTypes.bool\n  },\n  Fulfilled: {\n    children: childrenFn,\n    state: stateObject.isRequired,\n    persist: PropTypes.bool\n  },\n  Rejected: {\n    children: childrenFn,\n    state: stateObject.isRequired,\n    persist: PropTypes.bool\n  },\n  Settled: {\n    children: childrenFn,\n    state: stateObject.isRequired,\n    persist: PropTypes.bool\n  }\n};\n\nconst renderFn = (children, ...args) => {\n  if (typeof children === \"function\") {\n    const render = children;\n    return render(...args);\n  }\n\n  return children;\n};\n/**\n * Renders only when no promise has started or completed yet.\n *\n * @prop {Function|Node} children Function (passing state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show until we have data, even while pending (loading) or when an error occurred\n */\n\n\nconst IfInitial = ({\n  children,\n  persist,\n  state = {}\n}) => React.createElement(React.Fragment, null, state.isInitial || persist && !state.data ? renderFn(children, state) : null);\n/**\n * Renders only while pending (promise is loading).\n *\n * @prop {Function|Node} children Function (passing state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} initial Show only on initial load (data is undefined)\n */\n\n\nconst IfPending = ({\n  children,\n  initial,\n  state = {}\n}) => React.createElement(React.Fragment, null, state.isPending && (!initial || !state.value) ? renderFn(children, state) : null);\n/**\n * Renders only when promise is resolved.\n *\n * @prop {Function|Node} children Function (passing data and state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show old data while pending (promise is loading)\n */\n\n\nconst IfFulfilled = ({\n  children,\n  persist,\n  state = {}\n}) => React.createElement(React.Fragment, null, state.isFulfilled || persist && state.data ? renderFn(children, state.data, state) : null);\n/**\n * Renders only when promise is rejected.\n *\n * @prop {Function|Node} children Function (passing error and state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show old error while pending (promise is loading)\n */\n\n\nconst IfRejected = ({\n  children,\n  persist,\n  state = {}\n}) => React.createElement(React.Fragment, null, state.isRejected || persist && state.error ? renderFn(children, state.error, state) : null);\n/**\n * Renders only when promise is fulfilled or rejected.\n *\n * @prop {Function|Node} children Function (passing state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show old data or error while pending (promise is loading)\n */\n\n\nconst IfSettled = ({\n  children,\n  persist,\n  state = {}\n}) => React.createElement(React.Fragment, null, state.isSettled || persist && state.value ? renderFn(children, state) : null);\n\nif (propTypes) {\n  IfInitial.propTypes = propTypes.Initial;\n  IfPending.propTypes = propTypes.Pending;\n  IfFulfilled.propTypes = propTypes.Fulfilled;\n  IfRejected.propTypes = propTypes.Rejected;\n  IfSettled.propTypes = propTypes.Settled;\n}\n\nvar StatusTypes;\n\n(function (StatusTypes) {\n  StatusTypes[\"initial\"] = \"initial\";\n  StatusTypes[\"pending\"] = \"pending\";\n  StatusTypes[\"fulfilled\"] = \"fulfilled\";\n  StatusTypes[\"rejected\"] = \"rejected\";\n})(StatusTypes || (StatusTypes = {}));\n\nconst getInitialStatus = (value, promise) => {\n  if (value instanceof Error) return StatusTypes.rejected;\n  if (value !== undefined) return StatusTypes.fulfilled;\n  if (promise) return StatusTypes.pending;\n  return StatusTypes.initial;\n};\n\nconst getIdleStatus = value => {\n  if (value instanceof Error) return StatusTypes.rejected;\n  if (value !== undefined) return StatusTypes.fulfilled;\n  return StatusTypes.initial;\n};\n\nconst getStatusProps = status => ({\n  status,\n  isInitial: status === StatusTypes.initial,\n  isPending: status === StatusTypes.pending,\n  isLoading: status === StatusTypes.pending,\n  isFulfilled: status === StatusTypes.fulfilled,\n  isResolved: status === StatusTypes.fulfilled,\n  isRejected: status === StatusTypes.rejected,\n  isSettled: status === StatusTypes.fulfilled || status === StatusTypes.rejected\n}); // This exists to make sure we don't hold any references to user-provided functions\n// The way NeverSettle extends from Promise is complicated, but can't be done differently because Babel doesn't support\n// extending built-in classes. See https://babeljs.io/docs/en/caveats/#classes\n\n\nconst NeverSettle = function () {};\n/* istanbul ignore next */\n\n\nif (Object.setPrototypeOf) {\n  Object.setPrototypeOf(NeverSettle, Promise);\n} else {\n  NeverSettle.__proto__ = Promise;\n}\n\nNeverSettle.prototype = Object.assign(Object.create(Promise.prototype), {\n  finally() {\n    return this;\n  },\n\n  catch() {\n    return this;\n  },\n\n  then() {\n    return this;\n  }\n\n});\nconst neverSettle = new NeverSettle();\nvar ActionTypes;\n\n(function (ActionTypes) {\n  ActionTypes[\"start\"] = \"start\";\n  ActionTypes[\"cancel\"] = \"cancel\";\n  ActionTypes[\"fulfill\"] = \"fulfill\";\n  ActionTypes[\"reject\"] = \"reject\";\n})(ActionTypes || (ActionTypes = {}));\n\nconst init = ({\n  initialValue,\n  promise,\n  promiseFn\n}) => ({\n  initialValue,\n  data: initialValue instanceof Error ? undefined : initialValue,\n  error: initialValue instanceof Error ? initialValue : undefined,\n  value: initialValue,\n  startedAt: promise || promiseFn ? new Date() : undefined,\n  finishedAt: initialValue ? new Date() : undefined,\n  ...getStatusProps(getInitialStatus(initialValue, promise || promiseFn)),\n  counter: 0,\n  promise: neverSettle\n});\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ActionTypes.start:\n      return { ...state,\n        startedAt: new Date(),\n        finishedAt: undefined,\n        ...getStatusProps(StatusTypes.pending),\n        counter: action.meta.counter,\n        promise: action.meta.promise\n      };\n\n    case ActionTypes.cancel:\n      return { ...state,\n        startedAt: undefined,\n        finishedAt: undefined,\n        ...getStatusProps(getIdleStatus(state.error || state.data)),\n        counter: action.meta.counter,\n        promise: action.meta.promise\n      };\n\n    case ActionTypes.fulfill:\n      return { ...state,\n        data: action.payload,\n        value: action.payload,\n        error: undefined,\n        finishedAt: new Date(),\n        ...getStatusProps(StatusTypes.fulfilled),\n        promise: action.meta.promise\n      };\n\n    case ActionTypes.reject:\n      return { ...state,\n        error: action.payload,\n        value: action.payload,\n        finishedAt: new Date(),\n        ...getStatusProps(StatusTypes.rejected),\n        promise: action.meta.promise\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst dispatchMiddleware = dispatch => (action, ...args) => {\n  dispatch(action, ...args);\n\n  if (action.type === ActionTypes.start && typeof action.payload === \"function\") {\n    action.payload();\n  }\n};\n\nclass Async extends React.Component {}\n/**\n * createInstance allows you to create instances of Async that are bound to a specific promise.\n * A unique instance also uses its own React context for better nesting capability.\n */\n\n\nfunction createInstance(defaultOptions = {}, displayName = \"Async\") {\n  const {\n    Consumer: UnguardedConsumer,\n    Provider\n  } = React.createContext(undefined);\n\n  function Consumer({\n    children\n  }) {\n    return React.createElement(UnguardedConsumer, null, value => {\n      if (!value) {\n        throw new Error(\"this component should only be used within an associated <Async> component!\");\n      }\n\n      return children(value);\n    });\n  }\n\n  class Async extends React.Component {\n    constructor(props) {\n      super(props);\n      this.mounted = false;\n      this.counter = 0;\n      this.args = [];\n      this.promise = neverSettle;\n      this.abortController = new MockAbortController();\n      this.start = this.start.bind(this);\n      this.load = this.load.bind(this);\n      this.run = this.run.bind(this);\n      this.cancel = this.cancel.bind(this);\n      this.onResolve = this.onResolve.bind(this);\n      this.onReject = this.onReject.bind(this);\n      this.setData = this.setData.bind(this);\n      this.setError = this.setError.bind(this);\n      const promise = props.promise;\n      const promiseFn = props.promiseFn || defaultOptions.promiseFn;\n      const initialValue = props.initialValue || defaultOptions.initialValue;\n      this.state = { ...init({\n          initialValue,\n          promise,\n          promiseFn\n        }),\n        cancel: this.cancel,\n        run: this.run,\n        reload: () => {\n          this.load();\n          this.run(...this.args);\n        },\n        setData: this.setData,\n        setError: this.setError\n      };\n      this.debugLabel = props.debugLabel || defaultOptions.debugLabel;\n      const {\n        devToolsDispatcher\n      } = globalScope.__REACT_ASYNC__;\n\n      const _reducer = props.reducer || defaultOptions.reducer;\n\n      const _dispatcher = props.dispatcher || defaultOptions.dispatcher || devToolsDispatcher;\n\n      const reducer$1 = _reducer ? (state, action) => _reducer(state, action, reducer) : reducer;\n      const dispatch = dispatchMiddleware((action, callback) => {\n        this.setState(state => reducer$1(state, action), callback);\n      });\n      this.dispatch = _dispatcher ? action => _dispatcher(action, dispatch, props) : dispatch;\n    }\n\n    componentDidMount() {\n      this.mounted = true;\n\n      if (this.props.promise || !this.state.initialValue) {\n        this.load();\n      }\n    }\n\n    componentDidUpdate(prevProps) {\n      const {\n        watch,\n        watchFn = defaultOptions.watchFn,\n        promise,\n        promiseFn\n      } = this.props;\n\n      if (watch !== prevProps.watch) {\n        if (this.counter) this.cancel();\n        return this.load();\n      }\n\n      if (watchFn && watchFn({ ...defaultOptions,\n        ...this.props\n      }, { ...defaultOptions,\n        ...prevProps\n      })) {\n        if (this.counter) this.cancel();\n        return this.load();\n      }\n\n      if (promise !== prevProps.promise) {\n        if (this.counter) this.cancel();\n        if (promise) return this.load();\n      }\n\n      if (promiseFn !== prevProps.promiseFn) {\n        if (this.counter) this.cancel();\n        if (promiseFn) return this.load();\n      }\n    }\n\n    componentWillUnmount() {\n      this.cancel();\n      this.mounted = false;\n    }\n\n    getMeta(meta) {\n      return {\n        counter: this.counter,\n        promise: this.promise,\n        debugLabel: this.debugLabel,\n        ...meta\n      };\n    }\n\n    start(promiseFn) {\n      if (\"AbortController\" in globalScope) {\n        this.abortController.abort();\n        this.abortController = new globalScope.AbortController();\n      }\n\n      this.counter++;\n      return this.promise = new Promise((resolve, reject) => {\n        if (!this.mounted) return;\n\n        const executor = () => promiseFn().then(resolve, reject);\n\n        this.dispatch({\n          type: ActionTypes.start,\n          payload: executor,\n          meta: this.getMeta()\n        });\n      });\n    }\n\n    load() {\n      const promise = this.props.promise;\n      const promiseFn = this.props.promiseFn || defaultOptions.promiseFn;\n\n      if (promise) {\n        this.start(() => promise).then(this.onResolve(this.counter)).catch(this.onReject(this.counter));\n      } else if (promiseFn) {\n        const props = { ...defaultOptions,\n          ...this.props\n        };\n        this.start(() => promiseFn(props, this.abortController)).then(this.onResolve(this.counter)).catch(this.onReject(this.counter));\n      }\n    }\n\n    run(...args) {\n      const deferFn = this.props.deferFn || defaultOptions.deferFn;\n\n      if (deferFn) {\n        this.args = args;\n        const props = { ...defaultOptions,\n          ...this.props\n        };\n        return this.start(() => deferFn(args, props, this.abortController)).then(this.onResolve(this.counter), this.onReject(this.counter));\n      }\n    }\n\n    cancel() {\n      const onCancel = this.props.onCancel || defaultOptions.onCancel;\n      onCancel && onCancel();\n      this.counter++;\n      this.abortController.abort();\n      this.mounted && this.dispatch({\n        type: ActionTypes.cancel,\n        meta: this.getMeta()\n      });\n    }\n\n    onResolve(counter) {\n      return data => {\n        if (this.counter === counter) {\n          const onResolve = this.props.onResolve || defaultOptions.onResolve;\n          this.setData(data, () => onResolve && onResolve(data));\n        }\n\n        return data;\n      };\n    }\n\n    onReject(counter) {\n      return error => {\n        if (this.counter === counter) {\n          const onReject = this.props.onReject || defaultOptions.onReject;\n          this.setError(error, () => onReject && onReject(error));\n        }\n\n        return error;\n      };\n    }\n\n    setData(data, callback) {\n      this.mounted && this.dispatch({\n        type: ActionTypes.fulfill,\n        payload: data,\n        meta: this.getMeta()\n      }, callback);\n      return data;\n    }\n\n    setError(error, callback) {\n      this.mounted && this.dispatch({\n        type: ActionTypes.reject,\n        payload: error,\n        error: true,\n        meta: this.getMeta()\n      }, callback);\n      return error;\n    }\n\n    render() {\n      const {\n        children,\n        suspense\n      } = this.props;\n\n      if (suspense && this.state.isPending && this.promise !== neverSettle) {\n        // Rely on Suspense to handle the loading state\n        throw this.promise;\n      }\n\n      if (typeof children === \"function\") {\n        const render = children;\n        return React.createElement(Provider, {\n          value: this.state\n        }, render(this.state));\n      }\n\n      if (children !== undefined && children !== null) {\n        return React.createElement(Provider, {\n          value: this.state\n        }, children);\n      }\n\n      return null;\n    }\n\n  }\n\n  if (propTypes) Async.propTypes = propTypes.Async;\n\n  const AsyncInitial = props => React.createElement(Consumer, null, st => React.createElement(IfInitial, Object.assign({}, props, {\n    state: st\n  })));\n\n  const AsyncPending = props => React.createElement(Consumer, null, st => React.createElement(IfPending, Object.assign({}, props, {\n    state: st\n  })));\n\n  const AsyncFulfilled = props => React.createElement(Consumer, null, st => React.createElement(IfFulfilled, Object.assign({}, props, {\n    state: st\n  })));\n\n  const AsyncRejected = props => React.createElement(Consumer, null, st => React.createElement(IfRejected, Object.assign({}, props, {\n    state: st\n  })));\n\n  const AsyncSettled = props => React.createElement(Consumer, null, st => React.createElement(IfSettled, Object.assign({}, props, {\n    state: st\n  })));\n\n  AsyncInitial.displayName = `${displayName}.Initial`;\n  AsyncPending.displayName = `${displayName}.Pending`;\n  AsyncFulfilled.displayName = `${displayName}.Fulfilled`;\n  AsyncRejected.displayName = `${displayName}.Rejected`;\n  AsyncSettled.displayName = `${displayName}.Settled`;\n  return Object.assign(Async, {\n    displayName: displayName,\n    Initial: AsyncInitial,\n    Pending: AsyncPending,\n    Loading: AsyncPending,\n    Fulfilled: AsyncFulfilled,\n    Resolved: AsyncFulfilled,\n    Rejected: AsyncRejected,\n    Settled: AsyncSettled\n  });\n}\n\nvar Async$1 = createInstance();\n\nfunction useAsync(arg1, arg2) {\n  const options = typeof arg1 === \"function\" ? { ...arg2,\n    promiseFn: arg1\n  } : arg1;\n  const counter = useRef(0);\n  const isMounted = useRef(true);\n  const lastArgs = useRef(undefined);\n  const lastOptions = useRef(options);\n  const lastPromise = useRef(neverSettle);\n  const abortController = useRef(new MockAbortController());\n  const {\n    devToolsDispatcher\n  } = globalScope.__REACT_ASYNC__;\n  const {\n    reducer: reducer$1,\n    dispatcher = devToolsDispatcher\n  } = options;\n  const [state, _dispatch] = useReducer(reducer$1 ? (state, action) => reducer$1(state, action, reducer) : reducer, options, init);\n  const dispatch = useCallback(dispatcher ? action => dispatcher(action, dispatchMiddleware(_dispatch), lastOptions.current) : dispatchMiddleware(_dispatch), [dispatcher]);\n  const {\n    debugLabel\n  } = options;\n  const getMeta = useCallback(meta => ({\n    counter: counter.current,\n    promise: lastPromise.current,\n    debugLabel,\n    ...meta\n  }), [debugLabel]);\n  const setData = useCallback((data, callback = noop) => {\n    if (isMounted.current) {\n      dispatch({\n        type: ActionTypes.fulfill,\n        payload: data,\n        meta: getMeta()\n      });\n      callback();\n    }\n\n    return data;\n  }, [dispatch, getMeta]);\n  const setError = useCallback((error, callback = noop) => {\n    if (isMounted.current) {\n      dispatch({\n        type: ActionTypes.reject,\n        payload: error,\n        error: true,\n        meta: getMeta()\n      });\n      callback();\n    }\n\n    return error;\n  }, [dispatch, getMeta]);\n  const {\n    onResolve,\n    onReject\n  } = options;\n  const handleResolve = useCallback(count => data => count === counter.current && setData(data, () => onResolve && onResolve(data)), [setData, onResolve]);\n  const handleReject = useCallback(count => err => count === counter.current && setError(err, () => onReject && onReject(err)), [setError, onReject]);\n  const start = useCallback(promiseFn => {\n    if (\"AbortController\" in globalScope) {\n      abortController.current.abort();\n      abortController.current = new globalScope.AbortController();\n    }\n\n    counter.current++;\n    return lastPromise.current = new Promise((resolve, reject) => {\n      if (!isMounted.current) return;\n\n      const executor = () => promiseFn().then(resolve, reject);\n\n      dispatch({\n        type: ActionTypes.start,\n        payload: executor,\n        meta: getMeta()\n      });\n    });\n  }, [dispatch, getMeta]);\n  const {\n    promise,\n    promiseFn,\n    initialValue\n  } = options;\n  const load = useCallback(() => {\n    const isPreInitialized = initialValue && counter.current === 0;\n\n    if (promise) {\n      start(() => promise).then(handleResolve(counter.current)).catch(handleReject(counter.current));\n    } else if (promiseFn && !isPreInitialized) {\n      start(() => promiseFn(lastOptions.current, abortController.current)).then(handleResolve(counter.current)).catch(handleReject(counter.current));\n    }\n  }, [start, promise, promiseFn, initialValue, handleResolve, handleReject]);\n  const {\n    deferFn\n  } = options;\n  const run = useCallback((...args) => {\n    if (deferFn) {\n      lastArgs.current = args;\n      start(() => deferFn(args, lastOptions.current, abortController.current)).then(handleResolve(counter.current)).catch(handleReject(counter.current));\n    }\n  }, [start, deferFn, handleResolve, handleReject]);\n  const reload = useCallback(() => {\n    lastArgs.current ? run(...lastArgs.current) : load();\n  }, [run, load]);\n  const {\n    onCancel\n  } = options;\n  const cancel = useCallback(() => {\n    onCancel && onCancel();\n    counter.current++;\n    abortController.current.abort();\n    isMounted.current && dispatch({\n      type: ActionTypes.cancel,\n      meta: getMeta()\n    });\n  }, [onCancel, dispatch, getMeta]);\n  /* These effects should only be triggered on changes to specific props */\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  const {\n    watch,\n    watchFn\n  } = options;\n  useEffect(() => {\n    if (watchFn && lastOptions.current && watchFn(options, lastOptions.current)) {\n      lastOptions.current = options;\n      load();\n    }\n  });\n  useEffect(() => {\n    lastOptions.current = options;\n  }, [options]);\n  useEffect(() => {\n    if (counter.current) cancel();\n    if (promise || promiseFn) load();\n  }, [promise, promiseFn, watch]);\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n  useEffect(() => () => cancel(), []);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  useDebugValue(state, ({\n    status\n  }) => `[${counter.current}] ${status}`);\n\n  if (options.suspense && state.isPending && lastPromise.current !== neverSettle) {\n    // Rely on Suspense to handle the loading state\n    throw lastPromise.current;\n  }\n\n  return useMemo(() => ({ ...state,\n    run,\n    reload,\n    cancel,\n    setData,\n    setError\n  }), [state, run, reload, cancel, setData, setError]);\n}\n\nclass FetchError extends Error {\n  constructor(response) {\n    super(`${response.status} ${response.statusText}`);\n    this.response = response;\n    /* istanbul ignore next */\n\n    if (Object.setPrototypeOf) {\n      // Not available in IE 10, but can be polyfilled\n      Object.setPrototypeOf(this, FetchError.prototype);\n    }\n  }\n\n}\n\nconst parseResponse = (accept, json) => res => {\n  if (!res.ok) return Promise.reject(new FetchError(res));\n  if (typeof json === \"boolean\") return json ? res.json() : res;\n  return accept === \"application/json\" ? res.json() : res;\n};\n\nfunction isEvent(e) {\n  return typeof e === \"object\" && \"preventDefault\" in e;\n}\n/**\n *\n * @param {RequestInfo} resource\n * @param {RequestInit} init\n * @param {FetchOptions} options\n * @returns {AsyncState<T, FetchRun<T>>}\n */\n\n\nfunction useAsyncFetch(resource, init, {\n  defer,\n  json,\n  ...options\n} = {}) {\n  const method = resource.method || init && init.method;\n  const headers = resource.headers || init && init.headers || {};\n  const accept = headers[\"Accept\"] || headers[\"accept\"] || headers.get && headers.get(\"accept\");\n\n  const doFetch = (input, init) => globalScope.fetch(input, init).then(parseResponse(accept, json));\n\n  const isDefer = typeof defer === \"boolean\" ? defer : [\"POST\", \"PUT\", \"PATCH\", \"DELETE\"].indexOf(method) !== -1;\n  const fn = isDefer ? \"deferFn\" : \"promiseFn\";\n  const identity = JSON.stringify({\n    resource,\n    init,\n    isDefer\n  });\n  const promiseFn = useCallback((_, {\n    signal\n  }) => {\n    return doFetch(resource, {\n      signal,\n      ...init\n    });\n  }, [identity] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  const deferFn = useCallback(function ([override], _, {\n    signal\n  }) {\n    if (!override || isEvent(override)) {\n      return doFetch(resource, {\n        signal,\n        ...init\n      });\n    }\n\n    if (typeof override === \"function\") {\n      const {\n        resource: runResource,\n        ...runInit\n      } = override({\n        resource,\n        signal,\n        ...init\n      });\n      return doFetch(runResource || resource, {\n        signal,\n        ...runInit\n      });\n    }\n\n    const {\n      resource: runResource,\n      ...runInit\n    } = override;\n    return doFetch(runResource || resource, {\n      signal,\n      ...init,\n      ...runInit\n    });\n  }, [identity] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  const state = useAsync({ ...options,\n    [fn]: isDefer ? deferFn : promiseFn\n  });\n  useDebugValue(state, ({\n    counter,\n    status\n  }) => `[${counter}] ${status}`);\n  return state;\n}\n\nconst unsupported = () => {\n  throw new Error(\"useAsync requires React v16.8 or up. Upgrade your React version or use the <Async> component instead.\");\n};\n\nvar useAsync$1 = useEffect ? useAsync : unsupported;\nconst useFetch = useEffect ? useAsyncFetch : unsupported;\nexport default Async$1;\nexport { ActionTypes, Async$1 as Async, FetchError, IfFulfilled, IfInitial, IfPending, IfRejected, IfSettled, StatusTypes, createInstance, dispatchMiddleware, globalScope, init, neverSettle, reducer, useAsync$1 as useAsync, useFetch };","map":{"version":3,"sources":["../dist-src/globalScope.js","../dist-src/propTypes.js","../dist-src/helpers.js","../dist-src/status.js","../dist-src/reducer.js","../dist-src/Async.js","../dist-src/useAsync.js"],"names":["reducer","asyncReducer"],"mappings":";AAAA;;;;;;;AAKA,MAAM,WAAW,GAAG,CAAC,MAAM;AACvB,MAAI,OAAO,IAAP,KAAgB,QAAhB,IAA4B,IAAI,CAAC,IAAL,KAAc,IAA9C,EACI,OAAO,IAAP;AACJ,MAAI,OAAO,MAAP,KAAkB,QAAlB,IAA8B,MAAM,CAAC,MAAP,KAAkB,MAApD,EACI,OAAO,MAAP;AACJ,MAAI,OAAO,MAAP,KAAkB,QAAlB,IAA8B,MAAM,CAAC,MAAP,KAAkB,MAApD,EACI,OAAO,MAAP;AACJ,SAAO,EAAP,CAPuB,CAOb;AACb,CARmB,GAApB;;;;;;AAYA,WAAW,CAAC,eAAZ,GAA8B,WAAW,CAAC,eAAZ,IAA+B,EAA7D;;AACO,MAAM,IAAI,GAAG,MAAM,CAAG,CAAtB;;AACA,MAAM,mBAAN,CAA0B;AAC7B,EAAA,WAAW,GAAG;AACV,SAAK,KAAL,GAAa,IAAb;AACA,SAAK,MAAL,GAAc,EAAd;AACH;;AAJ4B;;ACnBjC,IAAI,SAAJ;;AACA,IAAI;AACA,EAAA,SAAS,GAAG,OAAO,CAAC,YAAD,CAAnB;AACH,CAFD,CAGA,OAAO,CAAP,EAAU,CAAG;;AACb,MAAM,UAAU,GAAG,SAAS,IAAI,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,IAAX,EAAiB,SAAS,CAAC,IAA3B,CAApB,CAAhC;AACA,MAAM,WAAW,GAAG,SAAS,IACzB,SAAS,CAAC,KAAV,CAAgB;AACZ,EAAA,YAAY,EAAE,SAAS,CAAC,GADZ;AAEZ,EAAA,IAAI,EAAE,SAAS,CAAC,GAFJ;AAGZ,EAAA,KAAK,EAAE,SAAS,CAAC,UAAV,CAAqB,KAArB,CAHK;AAIZ,EAAA,KAAK,EAAE,SAAS,CAAC,GAJL;AAKZ,EAAA,SAAS,EAAE,SAAS,CAAC,UAAV,CAAqB,IAArB,CALC;AAMZ,EAAA,UAAU,EAAE,SAAS,CAAC,UAAV,CAAqB,IAArB,CANA;AAOZ,EAAA,MAAM,EAAE,SAAS,CAAC,KAAV,CAAgB,CAAC,SAAD,EAAY,SAAZ,EAAuB,WAAvB,EAAoC,UAApC,CAAhB,CAPI;AAQZ,EAAA,SAAS,EAAE,SAAS,CAAC,IART;AASZ,EAAA,SAAS,EAAE,SAAS,CAAC,IATT;AAUZ,EAAA,SAAS,EAAE,SAAS,CAAC,IAVT;AAWZ,EAAA,WAAW,EAAE,SAAS,CAAC,IAXX;AAYZ,EAAA,UAAU,EAAE,SAAS,CAAC,IAZV;AAaZ,EAAA,UAAU,EAAE,SAAS,CAAC,IAbV;AAcZ,EAAA,SAAS,EAAE,SAAS,CAAC,IAdT;AAeZ,EAAA,OAAO,EAAE,SAAS,CAAC,MAfP;AAgBZ,EAAA,OAAO,EAAE,SAAS,CAAC,UAAV,CAAqB,OAArB,CAhBG;AAiBZ,EAAA,GAAG,EAAE,SAAS,CAAC,IAjBH;AAkBZ,EAAA,MAAM,EAAE,SAAS,CAAC,IAlBN;AAmBZ,EAAA,MAAM,EAAE,SAAS,CAAC,IAnBN;AAoBZ,EAAA,OAAO,EAAE,SAAS,CAAC,IApBP;AAqBZ,EAAA,QAAQ,EAAE,SAAS,CAAC;AArBR,CAAhB,CADJ;AAwBA,IAAA,SAAA,GAAe,SAAS,IAAI;AACxB,EAAA,KAAK,EAAE;AACH,IAAA,QAAQ,EAAE,UADP;AAEH,IAAA,OAAO,EAAE,SAAS,CAAC,UAAV,CAAqB,OAArB,CAFN;AAGH,IAAA,SAAS,EAAE,SAAS,CAAC,IAHlB;AAIH,IAAA,OAAO,EAAE,SAAS,CAAC,IAJhB;AAKH,IAAA,KAAK,EAAE,SAAS,CAAC,GALd;AAMH,IAAA,OAAO,EAAE,SAAS,CAAC,IANhB;AAOH,IAAA,YAAY,EAAE,SAAS,CAAC,GAPrB;AAQH,IAAA,SAAS,EAAE,SAAS,CAAC,IARlB;AASH,IAAA,QAAQ,EAAE,SAAS,CAAC,IATjB;AAUH,IAAA,OAAO,EAAE,SAAS,CAAC,IAVhB;AAWH,IAAA,UAAU,EAAE,SAAS,CAAC,IAXnB;AAYH,IAAA,UAAU,EAAE,SAAS,CAAC,MAZnB;AAaH,IAAA,QAAQ,EAAE,SAAS,CAAC;AAbjB,GADiB;AAgBxB,EAAA,OAAO,EAAE;AACL,IAAA,QAAQ,EAAE,UADL;AAEL,IAAA,KAAK,EAAE,WAAW,CAAC,UAFd;AAGL,IAAA,OAAO,EAAE,SAAS,CAAC;AAHd,GAhBe;AAqBxB,EAAA,OAAO,EAAE;AACL,IAAA,QAAQ,EAAE,UADL;AAEL,IAAA,KAAK,EAAE,WAAW,CAAC,UAFd;AAGL,IAAA,OAAO,EAAE,SAAS,CAAC;AAHd,GArBe;AA0BxB,EAAA,SAAS,EAAE;AACP,IAAA,QAAQ,EAAE,UADH;AAEP,IAAA,KAAK,EAAE,WAAW,CAAC,UAFZ;AAGP,IAAA,OAAO,EAAE,SAAS,CAAC;AAHZ,GA1Ba;AA+BxB,EAAA,QAAQ,EAAE;AACN,IAAA,QAAQ,EAAE,UADJ;AAEN,IAAA,KAAK,EAAE,WAAW,CAAC,UAFb;AAGN,IAAA,OAAO,EAAE,SAAS,CAAC;AAHb,GA/Bc;AAoCxB,EAAA,OAAO,EAAE;AACL,IAAA,QAAQ,EAAE,UADL;AAEL,IAAA,KAAK,EAAE,WAAW,CAAC,UAFd;AAGL,IAAA,OAAO,EAAE,SAAS,CAAC;AAHd;AApCe,CAA5B;;AC5BA,MAAM,QAAQ,GAAG,CAAC,QAAD,EAAW,GAAG,IAAd,KAAuB;AACpC,MAAI,OAAO,QAAP,KAAoB,UAAxB,EAAoC;AAChC,UAAM,MAAM,GAAG,QAAf;AACA,WAAO,MAAM,CAAC,GAAG,IAAJ,CAAb;AACH;;AACD,SAAO,QAAP;AACH,CAND;;;;;;;;;;AAcY,MAAC,SAAS,GAAG,CAAC;AAAE,EAAA,QAAF;AAAY,EAAA,OAAZ;AAAqB,EAAA,KAAK,GAAG;AAA7B,CAAD,KAAwC,KAAK,CAAC,aAAN,CAAoB,KAAK,CAAC,QAA1B,EAAoC,IAApC,EAA0C,KAAK,CAAC,SAAN,IAAoB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAtC,GAA8C,QAAQ,CAAC,QAAD,EAAW,KAAX,CAAtD,GAA0E,IAApH,CAArD;;;;;;;;;;AAQA,MAAC,SAAS,GAAG,CAAC;AAAE,EAAA,QAAF;AAAY,EAAA,OAAZ;AAAqB,EAAA,KAAK,GAAG;AAA7B,CAAD,KAAwC,KAAK,CAAC,aAAN,CAAoB,KAAK,CAAC,QAA1B,EAAoC,IAApC,EAA0C,KAAK,CAAC,SAAN,KAAoB,CAAC,OAAD,IAAY,CAAC,KAAK,CAAC,KAAvC,IAAgD,QAAQ,CAAC,QAAD,EAAW,KAAX,CAAxD,GAA4E,IAAtH,CAArD;;;;;;;;;;AAQA,MAAC,WAAW,GAAG,CAAC;AAAE,EAAA,QAAF;AAAY,EAAA,OAAZ;AAAqB,EAAA,KAAK,GAAG;AAA7B,CAAD,KAAyC,KAAK,CAAC,aAAN,CAAoB,KAAK,CAAC,QAA1B,EAAoC,IAApC,EAA0C,KAAK,CAAC,WAAN,IAAsB,OAAO,IAAI,KAAK,CAAC,IAAvC,GAA+C,QAAQ,CAAC,QAAD,EAAW,KAAK,CAAC,IAAjB,EAAuB,KAAvB,CAAvD,GAAuF,IAAjI,CAAxD;;;;;;;;;;AAQA,MAAC,UAAU,GAAG,CAAC;AAAE,EAAA,QAAF;AAAY,EAAA,OAAZ;AAAqB,EAAA,KAAK,GAAG;AAA7B,CAAD,KAAyC,KAAK,CAAC,aAAN,CAAoB,KAAK,CAAC,QAA1B,EAAoC,IAApC,EAA0C,KAAK,CAAC,UAAN,IAAqB,OAAO,IAAI,KAAK,CAAC,KAAtC,GAA+C,QAAQ,CAAC,QAAD,EAAW,KAAK,CAAC,KAAjB,EAAwB,KAAxB,CAAvD,GAAwF,IAAlI,CAAvD;;;;;;;;;;AAQA,MAAC,SAAS,GAAG,CAAC;AAAE,EAAA,QAAF;AAAY,EAAA,OAAZ;AAAqB,EAAA,KAAK,GAAG;AAA7B,CAAD,KAAwC,KAAK,CAAC,aAAN,CAAoB,KAAK,CAAC,QAA1B,EAAoC,IAApC,EAA0C,KAAK,CAAC,SAAN,IAAoB,OAAO,IAAI,KAAK,CAAC,KAArC,GAA8C,QAAQ,CAAC,QAAD,EAAW,KAAX,CAAtD,GAA0E,IAApH,CAArD;;AACZ,IAAI,SAAJ,EAAe;AACX,EAAA,SAAS,CAAC,SAAV,GAAsB,SAAS,CAAC,OAAhC;AACA,EAAA,SAAS,CAAC,SAAV,GAAsB,SAAS,CAAC,OAAhC;AACA,EAAA,WAAW,CAAC,SAAZ,GAAwB,SAAS,CAAC,SAAlC;AACA,EAAA,UAAU,CAAC,SAAX,GAAuB,SAAS,CAAC,QAAjC;AACA,EAAA,SAAS,CAAC,SAAV,GAAsB,SAAS,CAAC,OAAhC;AACH;;ACvDS,IAAC,WAAD;;AACV,CAAC,UAAU,WAAV,EAAuB;AACpB,EAAA,WAAW,CAAC,SAAD,CAAX,GAAyB,SAAzB;AACA,EAAA,WAAW,CAAC,SAAD,CAAX,GAAyB,SAAzB;AACA,EAAA,WAAW,CAAC,WAAD,CAAX,GAA2B,WAA3B;AACA,EAAA,WAAW,CAAC,UAAD,CAAX,GAA0B,UAA1B;AACH,CALD,EAKG,WAAW,KAAK,WAAW,GAAG,EAAnB,CALd;;AAMO,MAAM,gBAAgB,GAAG,CAAC,KAAD,EAAQ,OAAR,KAAoB;AAChD,MAAI,KAAK,YAAY,KAArB,EACI,OAAO,WAAW,CAAC,QAAnB;AACJ,MAAI,KAAK,KAAK,SAAd,EACI,OAAO,WAAW,CAAC,SAAnB;AACJ,MAAI,OAAJ,EACI,OAAO,WAAW,CAAC,OAAnB;AACJ,SAAO,WAAW,CAAC,OAAnB;AACH,CARM;;AASA,MAAM,aAAa,GAAI,KAAD,IAAW;AACpC,MAAI,KAAK,YAAY,KAArB,EACI,OAAO,WAAW,CAAC,QAAnB;AACJ,MAAI,KAAK,KAAK,SAAd,EACI,OAAO,WAAW,CAAC,SAAnB;AACJ,SAAO,WAAW,CAAC,OAAnB;AACH,CANM;;AAOA,MAAM,cAAc,GAAI,MAAD,KAAa;AACvC,EAAA,MADuC;AAEvC,EAAA,SAAS,EAAE,MAAM,KAAK,WAAW,CAAC,OAFK;AAGvC,EAAA,SAAS,EAAE,MAAM,KAAK,WAAW,CAAC,OAHK;AAIvC,EAAA,SAAS,EAAE,MAAM,KAAK,WAAW,CAAC,OAJK;AAKvC,EAAA,WAAW,EAAE,MAAM,KAAK,WAAW,CAAC,SALG;AAMvC,EAAA,UAAU,EAAE,MAAM,KAAK,WAAW,CAAC,SANI;AAOvC,EAAA,UAAU,EAAE,MAAM,KAAK,WAAW,CAAC,QAPI;AAQvC,EAAA,SAAS,EAAE,MAAM,KAAK,WAAW,CAAC,SAAvB,IAAoC,MAAM,KAAK,WAAW,CAAC;AAR/B,CAAb,CAAvB,C,CCtBP;;;;;AAGA,MAAM,WAAW,GAAG,YAAY,CAAG,CAAnC;;;;AAEA,IAAI,MAAM,CAAC,cAAX,EAA2B;AACvB,EAAA,MAAM,CAAC,cAAP,CAAsB,WAAtB,EAAmC,OAAnC;AACH,CAFD,MAGK;AAED,EAAA,WAAW,CAAC,SAAZ,GAAwB,OAAxB;AACH;;AACD,WAAW,CAAC,SAAZ,GAAwB,MAAM,CAAC,MAAP,CAAc,MAAM,CAAC,MAAP,CAAc,OAAO,CAAC,SAAtB,CAAd,EAAgD;AACpE,EAAA,OAAO,GAAG;AACN,WAAO,IAAP;AACH,GAHmE;;AAIpE,EAAA,KAAK,GAAG;AACJ,WAAO,IAAP;AACH,GANmE;;AAOpE,EAAA,IAAI,GAAG;AACH,WAAO,IAAP;AACH;;AATmE,CAAhD,CAAxB;AAWY,MAAC,WAAW,GAAG,IAAI,WAAJ,EAAf;AACF,IAAC,WAAD;;AACV,CAAC,UAAU,WAAV,EAAuB;AACpB,EAAA,WAAW,CAAC,OAAD,CAAX,GAAuB,OAAvB;AACA,EAAA,WAAW,CAAC,QAAD,CAAX,GAAwB,QAAxB;AACA,EAAA,WAAW,CAAC,SAAD,CAAX,GAAyB,SAAzB;AACA,EAAA,WAAW,CAAC,QAAD,CAAX,GAAwB,QAAxB;AACH,CALD,EAKG,WAAW,KAAK,WAAW,GAAG,EAAnB,CALd;;AAMY,MAAC,IAAI,GAAG,CAAC;AAAE,EAAA,YAAF;AAAgB,EAAA,OAAhB;AAAyB,EAAA;AAAzB,CAAD,MAA4C;AAC5D,EAAA,YAD4D;AAE5D,EAAA,IAAI,EAAE,YAAY,YAAY,KAAxB,GAAgC,SAAhC,GAA4C,YAFU;AAG5D,EAAA,KAAK,EAAE,YAAY,YAAY,KAAxB,GAAgC,YAAhC,GAA+C,SAHM;AAI5D,EAAA,KAAK,EAAE,YAJqD;AAK5D,EAAA,SAAS,EAAE,OAAO,IAAI,SAAX,GAAuB,IAAI,IAAJ,EAAvB,GAAoC,SALa;AAM5D,EAAA,UAAU,EAAE,YAAY,GAAG,IAAI,IAAJ,EAAH,GAAgB,SANoB;AAO5D,KAAG,cAAc,CAAC,gBAAgB,CAAC,YAAD,EAAe,OAAO,IAAI,SAA1B,CAAjB,CAP2C;AAQ5D,EAAA,OAAO,EAAE,CARmD;AAS5D,EAAA,OAAO,EAAE;AATmD,CAA5C,CAAR;;AAWA,MAAC,OAAO,GAAG,CAAC,KAAD,EAAQ,MAAR,KAAmB;AACtC,UAAQ,MAAM,CAAC,IAAf;AACI,SAAK,WAAW,CAAC,KAAjB;AACI,aAAO,EACH,GAAG,KADA;AAEH,QAAA,SAAS,EAAE,IAAI,IAAJ,EAFR;AAGH,QAAA,UAAU,EAAE,SAHT;AAIH,WAAG,cAAc,CAAC,WAAW,CAAC,OAAb,CAJd;AAKH,QAAA,OAAO,EAAE,MAAM,CAAC,IAAP,CAAY,OALlB;AAMH,QAAA,OAAO,EAAE,MAAM,CAAC,IAAP,CAAY;AANlB,OAAP;;AAQJ,SAAK,WAAW,CAAC,MAAjB;AACI,aAAO,EACH,GAAG,KADA;AAEH,QAAA,SAAS,EAAE,SAFR;AAGH,QAAA,UAAU,EAAE,SAHT;AAIH,WAAG,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,KAAN,IAAe,KAAK,CAAC,IAAtB,CAAd,CAJd;AAKH,QAAA,OAAO,EAAE,MAAM,CAAC,IAAP,CAAY,OALlB;AAMH,QAAA,OAAO,EAAE,MAAM,CAAC,IAAP,CAAY;AANlB,OAAP;;AAQJ,SAAK,WAAW,CAAC,OAAjB;AACI,aAAO,EACH,GAAG,KADA;AAEH,QAAA,IAAI,EAAE,MAAM,CAAC,OAFV;AAGH,QAAA,KAAK,EAAE,MAAM,CAAC,OAHX;AAIH,QAAA,KAAK,EAAE,SAJJ;AAKH,QAAA,UAAU,EAAE,IAAI,IAAJ,EALT;AAMH,WAAG,cAAc,CAAC,WAAW,CAAC,SAAb,CANd;AAOH,QAAA,OAAO,EAAE,MAAM,CAAC,IAAP,CAAY;AAPlB,OAAP;;AASJ,SAAK,WAAW,CAAC,MAAjB;AACI,aAAO,EACH,GAAG,KADA;AAEH,QAAA,KAAK,EAAE,MAAM,CAAC,OAFX;AAGH,QAAA,KAAK,EAAE,MAAM,CAAC,OAHX;AAIH,QAAA,UAAU,EAAE,IAAI,IAAJ,EAJT;AAKH,WAAG,cAAc,CAAC,WAAW,CAAC,QAAb,CALd;AAMH,QAAA,OAAO,EAAE,MAAM,CAAC,IAAP,CAAY;AANlB,OAAP;;AAQJ;AACI,aAAO,KAAP;AAvCR;AAyCH,CA1CW;;AA2CA,MAAC,kBAAkB,GAAI,QAAD,IAAc,CAAC,MAAD,EAAS,GAAG,IAAZ,KAAqB;AACjE,EAAA,QAAQ,CAAC,MAAD,EAAS,GAAG,IAAZ,CAAR;;AACA,MAAI,MAAM,CAAC,IAAP,KAAgB,WAAW,CAAC,KAA5B,IAAqC,OAAO,MAAM,CAAC,OAAd,KAA0B,UAAnE,EAA+E;AAC3E,IAAA,MAAM,CAAC,OAAP;AACH;AACJ,CALW;;ACjFZ,MAAM,KAAN,SAAoB,KAAK,CAAC,SAA1B,CAAoC;;;;;;;AAM7B,SAAS,cAAT,CAAwB,cAAc,GAAG,EAAzC,EAA6C,WAAW,GAAG,OAA3D,EAAoE;AACvE,QAAM;AAAE,IAAA,QAAQ,EAAE,iBAAZ;AAA+B,IAAA;AAA/B,MAA4C,KAAK,CAAC,aAAN,CAAoB,SAApB,CAAlD;;AACA,WAAS,QAAT,CAAkB;AAAE,IAAA;AAAF,GAAlB,EAAgC;AAC5B,WAAQ,KAAK,CAAC,aAAN,CAAoB,iBAApB,EAAuC,IAAvC,EAA6C,KAAK,IAAI;AAC1D,UAAI,CAAC,KAAL,EAAY;AACR,cAAM,IAAI,KAAJ,CAAU,4EAAV,CAAN;AACH;;AACD,aAAO,QAAQ,CAAC,KAAD,CAAf;AACH,KALO,CAAR;AAMH;;AACD,QAAM,KAAN,SAAoB,KAAK,CAAC,SAA1B,CAAoC;AAChC,IAAA,WAAW,CAAC,KAAD,EAAQ;AACf,YAAM,KAAN;AACA,WAAK,OAAL,GAAe,KAAf;AACA,WAAK,OAAL,GAAe,CAAf;AACA,WAAK,IAAL,GAAY,EAAZ;AACA,WAAK,OAAL,GAAe,WAAf;AACA,WAAK,eAAL,GAAuB,IAAI,mBAAJ,EAAvB;AACA,WAAK,KAAL,GAAa,KAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB,CAAb;AACA,WAAK,IAAL,GAAY,KAAK,IAAL,CAAU,IAAV,CAAe,IAAf,CAAZ;AACA,WAAK,GAAL,GAAW,KAAK,GAAL,CAAS,IAAT,CAAc,IAAd,CAAX;AACA,WAAK,MAAL,GAAc,KAAK,MAAL,CAAY,IAAZ,CAAiB,IAAjB,CAAd;AACA,WAAK,SAAL,GAAiB,KAAK,SAAL,CAAe,IAAf,CAAoB,IAApB,CAAjB;AACA,WAAK,QAAL,GAAgB,KAAK,QAAL,CAAc,IAAd,CAAmB,IAAnB,CAAhB;AACA,WAAK,OAAL,GAAe,KAAK,OAAL,CAAa,IAAb,CAAkB,IAAlB,CAAf;AACA,WAAK,QAAL,GAAgB,KAAK,QAAL,CAAc,IAAd,CAAmB,IAAnB,CAAhB;AACA,YAAM,OAAO,GAAG,KAAK,CAAC,OAAtB;AACA,YAAM,SAAS,GAAG,KAAK,CAAC,SAAN,IAAmB,cAAc,CAAC,SAApD;AACA,YAAM,YAAY,GAAG,KAAK,CAAC,YAAN,IAAsB,cAAc,CAAC,YAA1D;AACA,WAAK,KAAL,GAAa,EACT,GAAG,IAAI,CAAC;AAAE,UAAA,YAAF;AAAgB,UAAA,OAAhB;AAAyB,UAAA;AAAzB,SAAD,CADE;AAET,QAAA,MAAM,EAAE,KAAK,MAFJ;AAGT,QAAA,GAAG,EAAE,KAAK,GAHD;AAIT,QAAA,MAAM,EAAE,MAAM;AACV,eAAK,IAAL;AACA,eAAK,GAAL,CAAS,GAAG,KAAK,IAAjB;AACH,SAPQ;AAQT,QAAA,OAAO,EAAE,KAAK,OARL;AAST,QAAA,QAAQ,EAAE,KAAK;AATN,OAAb;AAWA,WAAK,UAAL,GAAkB,KAAK,CAAC,UAAN,IAAoB,cAAc,CAAC,UAArD;AACA,YAAM;AAAE,QAAA;AAAF,UAAyB,WAAW,CAAC,eAA3C;;AACA,YAAM,QAAQ,GAAG,KAAK,CAAC,OAAN,IAAiB,cAAc,CAAC,OAAjD;;AACA,YAAM,WAAW,GAAG,KAAK,CAAC,UAAN,IAAoB,cAAc,CAAC,UAAnC,IAAiD,kBAArE;;AACA,YAAMA,SAAO,GAAG,QAAQ,GAClB,CAAC,KAAD,EAAQ,MAAR,KAAmB,QAAQ,CAAC,KAAD,EAAQ,MAAR,EAAgBC,OAAhB,CADT,GAElBA,OAFN;AAGA,YAAM,QAAQ,GAAG,kBAAkB,CAAC,CAAC,MAAD,EAAS,QAAT,KAAsB;AACtD,aAAK,QAAL,CAAc,KAAK,IAAID,SAAO,CAAC,KAAD,EAAQ,MAAR,CAA9B,EAA+C,QAA/C;AACH,OAFkC,CAAnC;AAGA,WAAK,QAAL,GAAgB,WAAW,GAAG,MAAM,IAAI,WAAW,CAAC,MAAD,EAAS,QAAT,EAAmB,KAAnB,CAAxB,GAAoD,QAA/E;AACH;;AACD,IAAA,iBAAiB,GAAG;AAChB,WAAK,OAAL,GAAe,IAAf;;AACA,UAAI,KAAK,KAAL,CAAW,OAAX,IAAsB,CAAC,KAAK,KAAL,CAAW,YAAtC,EAAoD;AAChD,aAAK,IAAL;AACH;AACJ;;AACD,IAAA,kBAAkB,CAAC,SAAD,EAAY;AAC1B,YAAM;AAAE,QAAA,KAAF;AAAS,QAAA,OAAO,GAAG,cAAc,CAAC,OAAlC;AAA2C,QAAA,OAA3C;AAAoD,QAAA;AAApD,UAAkE,KAAK,KAA7E;;AACA,UAAI,KAAK,KAAK,SAAS,CAAC,KAAxB,EAA+B;AAC3B,YAAI,KAAK,OAAT,EACI,KAAK,MAAL;AACJ,eAAO,KAAK,IAAL,EAAP;AACH;;AACD,UAAI,OAAO,IACP,OAAO,CAAC,EAAE,GAAG,cAAL;AAAqB,WAAG,KAAK;AAA7B,OAAD,EAAuC,EAAE,GAAG,cAAL;AAAqB,WAAG;AAAxB,OAAvC,CADX,EACwF;AACpF,YAAI,KAAK,OAAT,EACI,KAAK,MAAL;AACJ,eAAO,KAAK,IAAL,EAAP;AACH;;AACD,UAAI,OAAO,KAAK,SAAS,CAAC,OAA1B,EAAmC;AAC/B,YAAI,KAAK,OAAT,EACI,KAAK,MAAL;AACJ,YAAI,OAAJ,EACI,OAAO,KAAK,IAAL,EAAP;AACP;;AACD,UAAI,SAAS,KAAK,SAAS,CAAC,SAA5B,EAAuC;AACnC,YAAI,KAAK,OAAT,EACI,KAAK,MAAL;AACJ,YAAI,SAAJ,EACI,OAAO,KAAK,IAAL,EAAP;AACP;AACJ;;AACD,IAAA,oBAAoB,GAAG;AACnB,WAAK,MAAL;AACA,WAAK,OAAL,GAAe,KAAf;AACH;;AACD,IAAA,OAAO,CAAC,IAAD,EAAO;AACV,aAAO;AACH,QAAA,OAAO,EAAE,KAAK,OADX;AAEH,QAAA,OAAO,EAAE,KAAK,OAFX;AAGH,QAAA,UAAU,EAAE,KAAK,UAHd;AAIH,WAAG;AAJA,OAAP;AAMH;;AACD,IAAA,KAAK,CAAC,SAAD,EAAY;AACb,UAAI,qBAAqB,WAAzB,EAAsC;AAClC,aAAK,eAAL,CAAqB,KAArB;AACA,aAAK,eAAL,GAAuB,IAAI,WAAW,CAAC,eAAhB,EAAvB;AACH;;AACD,WAAK,OAAL;AACA,aAAQ,KAAK,OAAL,GAAe,IAAI,OAAJ,CAAY,CAAC,OAAD,EAAU,MAAV,KAAqB;AACpD,YAAI,CAAC,KAAK,OAAV,EACI;;AACJ,cAAM,QAAQ,GAAG,MAAM,SAAS,GAAG,IAAZ,CAAiB,OAAjB,EAA0B,MAA1B,CAAvB;;AACA,aAAK,QAAL,CAAc;AAAE,UAAA,IAAI,EAAE,WAAW,CAAC,KAApB;AAA2B,UAAA,OAAO,EAAE,QAApC;AAA8C,UAAA,IAAI,EAAE,KAAK,OAAL;AAApD,SAAd;AACH,OALsB,CAAvB;AAMH;;AACD,IAAA,IAAI,GAAG;AACH,YAAM,OAAO,GAAG,KAAK,KAAL,CAAW,OAA3B;AACA,YAAM,SAAS,GAAG,KAAK,KAAL,CAAW,SAAX,IAAwB,cAAc,CAAC,SAAzD;;AACA,UAAI,OAAJ,EAAa;AACT,aAAK,KAAL,CAAW,MAAM,OAAjB,EACK,IADL,CACU,KAAK,SAAL,CAAe,KAAK,OAApB,CADV,EAEK,KAFL,CAEW,KAAK,QAAL,CAAc,KAAK,OAAnB,CAFX;AAGH,OAJD,MAKK,IAAI,SAAJ,EAAe;AAChB,cAAM,KAAK,GAAG,EAAE,GAAG,cAAL;AAAqB,aAAG,KAAK;AAA7B,SAAd;AACA,aAAK,KAAL,CAAW,MAAM,SAAS,CAAC,KAAD,EAAQ,KAAK,eAAb,CAA1B,EACK,IADL,CACU,KAAK,SAAL,CAAe,KAAK,OAApB,CADV,EAEK,KAFL,CAEW,KAAK,QAAL,CAAc,KAAK,OAAnB,CAFX;AAGH;AACJ;;AACD,IAAA,GAAG,CAAC,GAAG,IAAJ,EAAU;AACT,YAAM,OAAO,GAAG,KAAK,KAAL,CAAW,OAAX,IAAsB,cAAc,CAAC,OAArD;;AACA,UAAI,OAAJ,EAAa;AACT,aAAK,IAAL,GAAY,IAAZ;AACA,cAAM,KAAK,GAAG,EAAE,GAAG,cAAL;AAAqB,aAAG,KAAK;AAA7B,SAAd;AACA,eAAO,KAAK,KAAL,CAAW,MAAM,OAAO,CAAC,IAAD,EAAO,KAAP,EAAc,KAAK,eAAnB,CAAxB,EAA6D,IAA7D,CAAkE,KAAK,SAAL,CAAe,KAAK,OAApB,CAAlE,EAAgG,KAAK,QAAL,CAAc,KAAK,OAAnB,CAAhG,CAAP;AACH;AACJ;;AACD,IAAA,MAAM,GAAG;AACL,YAAM,QAAQ,GAAG,KAAK,KAAL,CAAW,QAAX,IAAuB,cAAc,CAAC,QAAvD;AACA,MAAA,QAAQ,IAAI,QAAQ,EAApB;AACA,WAAK,OAAL;AACA,WAAK,eAAL,CAAqB,KAArB;AACA,WAAK,OAAL,IAAgB,KAAK,QAAL,CAAc;AAAE,QAAA,IAAI,EAAE,WAAW,CAAC,MAApB;AAA4B,QAAA,IAAI,EAAE,KAAK,OAAL;AAAlC,OAAd,CAAhB;AACH;;AACD,IAAA,SAAS,CAAC,OAAD,EAAU;AACf,aAAQ,IAAD,IAAU;AACb,YAAI,KAAK,OAAL,KAAiB,OAArB,EAA8B;AAC1B,gBAAM,SAAS,GAAG,KAAK,KAAL,CAAW,SAAX,IAAwB,cAAc,CAAC,SAAzD;AACA,eAAK,OAAL,CAAa,IAAb,EAAmB,MAAM,SAAS,IAAI,SAAS,CAAC,IAAD,CAA/C;AACH;;AACD,eAAO,IAAP;AACH,OAND;AAOH;;AACD,IAAA,QAAQ,CAAC,OAAD,EAAU;AACd,aAAQ,KAAD,IAAW;AACd,YAAI,KAAK,OAAL,KAAiB,OAArB,EAA8B;AAC1B,gBAAM,QAAQ,GAAG,KAAK,KAAL,CAAW,QAAX,IAAuB,cAAc,CAAC,QAAvD;AACA,eAAK,QAAL,CAAc,KAAd,EAAqB,MAAM,QAAQ,IAAI,QAAQ,CAAC,KAAD,CAA/C;AACH;;AACD,eAAO,KAAP;AACH,OAND;AAOH;;AACD,IAAA,OAAO,CAAC,IAAD,EAAO,QAAP,EAAiB;AACpB,WAAK,OAAL,IACI,KAAK,QAAL,CAAc;AAAE,QAAA,IAAI,EAAE,WAAW,CAAC,OAApB;AAA6B,QAAA,OAAO,EAAE,IAAtC;AAA4C,QAAA,IAAI,EAAE,KAAK,OAAL;AAAlD,OAAd,EAAkF,QAAlF,CADJ;AAEA,aAAO,IAAP;AACH;;AACD,IAAA,QAAQ,CAAC,KAAD,EAAQ,QAAR,EAAkB;AACtB,WAAK,OAAL,IACI,KAAK,QAAL,CAAc;AAAE,QAAA,IAAI,EAAE,WAAW,CAAC,MAApB;AAA4B,QAAA,OAAO,EAAE,KAArC;AAA4C,QAAA,KAAK,EAAE,IAAnD;AAAyD,QAAA,IAAI,EAAE,KAAK,OAAL;AAA/D,OAAd,EAA+F,QAA/F,CADJ;AAEA,aAAO,KAAP;AACH;;AACD,IAAA,MAAM,GAAG;AACL,YAAM;AAAE,QAAA,QAAF;AAAY,QAAA;AAAZ,UAAyB,KAAK,KAApC;;AACA,UAAI,QAAQ,IAAI,KAAK,KAAL,CAAW,SAAvB,IAAoC,KAAK,OAAL,KAAiB,WAAzD,EAAsE;;AAElE,cAAM,KAAK,OAAX;AACH;;AACD,UAAI,OAAO,QAAP,KAAoB,UAAxB,EAAoC;AAChC,cAAM,MAAM,GAAG,QAAf;AACA,eAAO,KAAK,CAAC,aAAN,CAAoB,QAApB,EAA8B;AAAE,UAAA,KAAK,EAAE,KAAK;AAAd,SAA9B,EAAqD,MAAM,CAAC,KAAK,KAAN,CAA3D,CAAP;AACH;;AACD,UAAI,QAAQ,KAAK,SAAb,IAA0B,QAAQ,KAAK,IAA3C,EAAiD;AAC7C,eAAO,KAAK,CAAC,aAAN,CAAoB,QAApB,EAA8B;AAAE,UAAA,KAAK,EAAE,KAAK;AAAd,SAA9B,EAAqD,QAArD,CAAP;AACH;;AACD,aAAO,IAAP;AACH;;AA3K+B;;AA6KpC,MAAI,SAAJ,EACI,KAAK,CAAC,SAAN,GAAkB,SAAS,CAAC,KAA5B;;AACJ,QAAM,YAAY,GAAG,KAAK,IAAK,KAAK,CAAC,aAAN,CAAoB,QAApB,EAA8B,IAA9B,EAAoC,EAAE,IAAI,KAAK,CAAC,aAAN,CAAoB,SAApB,EAA+B,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,KAAlB,EAAyB;AAAE,IAAA,KAAK,EAAE;AAAT,GAAzB,CAA/B,CAA1C,CAA/B;;AACA,QAAM,YAAY,GAAG,KAAK,IAAK,KAAK,CAAC,aAAN,CAAoB,QAApB,EAA8B,IAA9B,EAAoC,EAAE,IAAI,KAAK,CAAC,aAAN,CAAoB,SAApB,EAA+B,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,KAAlB,EAAyB;AAAE,IAAA,KAAK,EAAE;AAAT,GAAzB,CAA/B,CAA1C,CAA/B;;AACA,QAAM,cAAc,GAAG,KAAK,IAAK,KAAK,CAAC,aAAN,CAAoB,QAApB,EAA8B,IAA9B,EAAoC,EAAE,IAAI,KAAK,CAAC,aAAN,CAAoB,WAApB,EAAiC,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,KAAlB,EAAyB;AAAE,IAAA,KAAK,EAAE;AAAT,GAAzB,CAAjC,CAA1C,CAAjC;;AACA,QAAM,aAAa,GAAG,KAAK,IAAK,KAAK,CAAC,aAAN,CAAoB,QAApB,EAA8B,IAA9B,EAAoC,EAAE,IAAI,KAAK,CAAC,aAAN,CAAoB,UAApB,EAAgC,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,KAAlB,EAAyB;AAAE,IAAA,KAAK,EAAE;AAAT,GAAzB,CAAhC,CAA1C,CAAhC;;AACA,QAAM,YAAY,GAAG,KAAK,IAAK,KAAK,CAAC,aAAN,CAAoB,QAApB,EAA8B,IAA9B,EAAoC,EAAE,IAAI,KAAK,CAAC,aAAN,CAAoB,SAApB,EAA+B,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,KAAlB,EAAyB;AAAE,IAAA,KAAK,EAAE;AAAT,GAAzB,CAA/B,CAA1C,CAA/B;;AACA,EAAA,YAAY,CAAC,WAAb,GAA4B,GAAE,WAAY,UAA1C;AACA,EAAA,YAAY,CAAC,WAAb,GAA4B,GAAE,WAAY,UAA1C;AACA,EAAA,cAAc,CAAC,WAAf,GAA8B,GAAE,WAAY,YAA5C;AACA,EAAA,aAAa,CAAC,WAAd,GAA6B,GAAE,WAAY,WAA3C;AACA,EAAA,YAAY,CAAC,WAAb,GAA4B,GAAE,WAAY,UAA1C;AACA,SAAO,MAAM,CAAC,MAAP,CAAc,KAAd,EAAqB;AACxB,IAAA,WAAW,EAAE,WADW;AAExB,IAAA,OAAO,EAAE,YAFe;AAGxB,IAAA,OAAO,EAAE,YAHe;AAIxB,IAAA,OAAO,EAAE,YAJe;AAKxB,IAAA,SAAS,EAAE,cALa;AAMxB,IAAA,QAAQ,EAAE,cANc;AAOxB,IAAA,QAAQ,EAAE,aAPc;AAQxB,IAAA,OAAO,EAAE;AARe,GAArB,CAAP;AAUH;;AACD,IAAA,OAAA,GAAe,cAAc,EAA7B;;ACtNA,SAAS,QAAT,CAAkB,IAAlB,EAAwB,IAAxB,EAA8B;AAC1B,QAAM,OAAO,GAAG,OAAO,IAAP,KAAgB,UAAhB,GACV,EACE,GAAG,IADL;AAEE,IAAA,SAAS,EAAE;AAFb,GADU,GAKV,IALN;AAMA,QAAM,OAAO,GAAG,MAAM,CAAC,CAAD,CAAtB;AACA,QAAM,SAAS,GAAG,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM,QAAQ,GAAG,MAAM,CAAC,SAAD,CAAvB;AACA,QAAM,WAAW,GAAG,MAAM,CAAC,OAAD,CAA1B;AACA,QAAM,WAAW,GAAG,MAAM,CAAC,WAAD,CAA1B;AACA,QAAM,eAAe,GAAG,MAAM,CAAC,IAAI,mBAAJ,EAAD,CAA9B;AACA,QAAM;AAAE,IAAA;AAAF,MAAyB,WAAW,CAAC,eAA3C;AACA,QAAM;AAAA,IAAA,OAAA,EAAEA,SAAF;AAAW,IAAA,UAAU,GAAG;AAAxB,MAA+C,OAArD;AACA,QAAM,CAAC,KAAD,EAAQ,SAAR,IAAqB,UAAU,CAACA,SAAO,GAAG,CAAC,KAAD,EAAQ,MAAR,KAAmBA,SAAO,CAAC,KAAD,EAAQ,MAAR,EAAgBC,OAAhB,CAA7B,GAA6DA,OAArE,EAAmF,OAAnF,EAA4F,IAA5F,CAArC;AACA,QAAM,QAAQ,GAAG,WAAW,CAAC,UAAU,GACjC,MAAM,IAAI,UAAU,CAAC,MAAD,EAAS,kBAAkB,CAAC,SAAD,CAA3B,EAAwC,WAAW,CAAC,OAApD,CADa,GAEjC,kBAAkB,CAAC,SAAD,CAFI,EAES,CAAC,UAAD,CAFT,CAA5B;AAGA,QAAM;AAAE,IAAA;AAAF,MAAiB,OAAvB;AACA,QAAM,OAAO,GAAG,WAAW,CAAE,IAAD,KAAW;AACnC,IAAA,OAAO,EAAE,OAAO,CAAC,OADkB;AAEnC,IAAA,OAAO,EAAE,WAAW,CAAC,OAFc;AAGnC,IAAA,UAHmC;AAInC,OAAG;AAJgC,GAAX,CAAD,EAKvB,CAAC,UAAD,CALuB,CAA3B;AAMA,QAAM,OAAO,GAAG,WAAW,CAAC,CAAC,IAAD,EAAO,QAAQ,GAAG,IAAlB,KAA2B;AACnD,QAAI,SAAS,CAAC,OAAd,EAAuB;AACnB,MAAA,QAAQ,CAAC;AACL,QAAA,IAAI,EAAE,WAAW,CAAC,OADb;AAEL,QAAA,OAAO,EAAE,IAFJ;AAGL,QAAA,IAAI,EAAE,OAAO;AAHR,OAAD,CAAR;AAKA,MAAA,QAAQ;AACX;;AACD,WAAO,IAAP;AACH,GAV0B,EAUxB,CAAC,QAAD,EAAW,OAAX,CAVwB,CAA3B;AAWA,QAAM,QAAQ,GAAG,WAAW,CAAC,CAAC,KAAD,EAAQ,QAAQ,GAAG,IAAnB,KAA4B;AACrD,QAAI,SAAS,CAAC,OAAd,EAAuB;AACnB,MAAA,QAAQ,CAAC;AACL,QAAA,IAAI,EAAE,WAAW,CAAC,MADb;AAEL,QAAA,OAAO,EAAE,KAFJ;AAGL,QAAA,KAAK,EAAE,IAHF;AAIL,QAAA,IAAI,EAAE,OAAO;AAJR,OAAD,CAAR;AAMA,MAAA,QAAQ;AACX;;AACD,WAAO,KAAP;AACH,GAX2B,EAWzB,CAAC,QAAD,EAAW,OAAX,CAXyB,CAA5B;AAYA,QAAM;AAAE,IAAA,SAAF;AAAa,IAAA;AAAb,MAA0B,OAAhC;AACA,QAAM,aAAa,GAAG,WAAW,CAAC,KAAK,IAAK,IAAD,IAAU,KAAK,KAAK,OAAO,CAAC,OAAlB,IAA6B,OAAO,CAAC,IAAD,EAAO,MAAM,SAAS,IAAI,SAAS,CAAC,IAAD,CAAnC,CAAxD,EAAoG,CAAC,OAAD,EAAU,SAAV,CAApG,CAAjC;AACA,QAAM,YAAY,GAAG,WAAW,CAAC,KAAK,IAAK,GAAD,IAAS,KAAK,KAAK,OAAO,CAAC,OAAlB,IAA6B,QAAQ,CAAC,GAAD,EAAM,MAAM,QAAQ,IAAI,QAAQ,CAAC,GAAD,CAAhC,CAAxD,EAAgG,CAAC,QAAD,EAAW,QAAX,CAAhG,CAAhC;AACA,QAAM,KAAK,GAAG,WAAW,CAAC,SAAS,IAAI;AACnC,QAAI,qBAAqB,WAAzB,EAAsC;AAClC,MAAA,eAAe,CAAC,OAAhB,CAAwB,KAAxB;AACA,MAAA,eAAe,CAAC,OAAhB,GAA0B,IAAI,WAAW,CAAC,eAAhB,EAA1B;AACH;;AACD,IAAA,OAAO,CAAC,OAAR;AACA,WAAQ,WAAW,CAAC,OAAZ,GAAsB,IAAI,OAAJ,CAAY,CAAC,OAAD,EAAU,MAAV,KAAqB;AAC3D,UAAI,CAAC,SAAS,CAAC,OAAf,EACI;;AACJ,YAAM,QAAQ,GAAG,MAAM,SAAS,GAAG,IAAZ,CAAiB,OAAjB,EAA0B,MAA1B,CAAvB;;AACA,MAAA,QAAQ,CAAC;AACL,QAAA,IAAI,EAAE,WAAW,CAAC,KADb;AAEL,QAAA,OAAO,EAAE,QAFJ;AAGL,QAAA,IAAI,EAAE,OAAO;AAHR,OAAD,CAAR;AAKH,KAT6B,CAA9B;AAUH,GAhBwB,EAgBtB,CAAC,QAAD,EAAW,OAAX,CAhBsB,CAAzB;AAiBA,QAAM;AAAE,IAAA,OAAF;AAAW,IAAA,SAAX;AAAsB,IAAA;AAAtB,MAAuC,OAA7C;AACA,QAAM,IAAI,GAAG,WAAW,CAAC,MAAM;AAC3B,UAAM,gBAAgB,GAAG,YAAY,IAAI,OAAO,CAAC,OAAR,KAAoB,CAA7D;;AACA,QAAI,OAAJ,EAAa;AACT,MAAA,KAAK,CAAC,MAAM,OAAP,CAAL,CACK,IADL,CACU,aAAa,CAAC,OAAO,CAAC,OAAT,CADvB,EAEK,KAFL,CAEW,YAAY,CAAC,OAAO,CAAC,OAAT,CAFvB;AAGH,KAJD,MAKK,IAAI,SAAS,IAAI,CAAC,gBAAlB,EAAoC;AACrC,MAAA,KAAK,CAAC,MAAM,SAAS,CAAC,WAAW,CAAC,OAAb,EAAsB,eAAe,CAAC,OAAtC,CAAhB,CAAL,CACK,IADL,CACU,aAAa,CAAC,OAAO,CAAC,OAAT,CADvB,EAEK,KAFL,CAEW,YAAY,CAAC,OAAO,CAAC,OAAT,CAFvB;AAGH;AACJ,GAZuB,EAYrB,CAAC,KAAD,EAAQ,OAAR,EAAiB,SAAjB,EAA4B,YAA5B,EAA0C,aAA1C,EAAyD,YAAzD,CAZqB,CAAxB;AAaA,QAAM;AAAE,IAAA;AAAF,MAAc,OAApB;AACA,QAAM,GAAG,GAAG,WAAW,CAAC,CAAC,GAAG,IAAJ,KAAa;AACjC,QAAI,OAAJ,EAAa;AACT,MAAA,QAAQ,CAAC,OAAT,GAAmB,IAAnB;AACA,MAAA,KAAK,CAAC,MAAM,OAAO,CAAC,IAAD,EAAO,WAAW,CAAC,OAAnB,EAA4B,eAAe,CAAC,OAA5C,CAAd,CAAL,CACK,IADL,CACU,aAAa,CAAC,OAAO,CAAC,OAAT,CADvB,EAEK,KAFL,CAEW,YAAY,CAAC,OAAO,CAAC,OAAT,CAFvB;AAGH;AACJ,GAPsB,EAOpB,CAAC,KAAD,EAAQ,OAAR,EAAiB,aAAjB,EAAgC,YAAhC,CAPoB,CAAvB;AAQA,QAAM,MAAM,GAAG,WAAW,CAAC,MAAM;AAC7B,IAAA,QAAQ,CAAC,OAAT,GAAmB,GAAG,CAAC,GAAG,QAAQ,CAAC,OAAb,CAAtB,GAA8C,IAAI,EAAlD;AACH,GAFyB,EAEvB,CAAC,GAAD,EAAM,IAAN,CAFuB,CAA1B;AAGA,QAAM;AAAE,IAAA;AAAF,MAAe,OAArB;AACA,QAAM,MAAM,GAAG,WAAW,CAAC,MAAM;AAC7B,IAAA,QAAQ,IAAI,QAAQ,EAApB;AACA,IAAA,OAAO,CAAC,OAAR;AACA,IAAA,eAAe,CAAC,OAAhB,CAAwB,KAAxB;AACA,IAAA,SAAS,CAAC,OAAV,IACI,QAAQ,CAAC;AACL,MAAA,IAAI,EAAE,WAAW,CAAC,MADb;AAEL,MAAA,IAAI,EAAE,OAAO;AAFR,KAAD,CADZ;AAKH,GATyB,EASvB,CAAC,QAAD,EAAW,QAAX,EAAqB,OAArB,CATuB,CAA1B;;;;;AAYA,QAAM;AAAE,IAAA,KAAF;AAAS,IAAA;AAAT,MAAqB,OAA3B;AACA,EAAA,SAAS,CAAC,MAAM;AACZ,QAAI,OAAO,IAAI,WAAW,CAAC,OAAvB,IAAkC,OAAO,CAAC,OAAD,EAAU,WAAW,CAAC,OAAtB,CAA7C,EAA6E;AACzE,MAAA,WAAW,CAAC,OAAZ,GAAsB,OAAtB;AACA,MAAA,IAAI;AACP;AACJ,GALQ,CAAT;AAMA,EAAA,SAAS,CAAC,MAAM;AACZ,IAAA,WAAW,CAAC,OAAZ,GAAsB,OAAtB;AACH,GAFQ,EAEN,CAAC,OAAD,CAFM,CAAT;AAGA,EAAA,SAAS,CAAC,MAAM;AACZ,QAAI,OAAO,CAAC,OAAZ,EACI,MAAM;AACV,QAAI,OAAO,IAAI,SAAf,EACI,IAAI;AACX,GALQ,EAKN,CAAC,OAAD,EAAU,SAAV,EAAqB,KAArB,CALM,CAAT;AAMA,EAAA,SAAS,CAAC,MAAM,MAAM;AAClB,IAAA,SAAS,CAAC,OAAV,GAAoB,KAApB;AACH,GAFQ,EAEN,EAFM,CAAT;AAGA,EAAA,SAAS,CAAC,MAAM,MAAM,MAAM,EAAnB,EAAuB,EAAvB,CAAT;;;AAEA,EAAA,aAAa,CAAC,KAAD,EAAQ,CAAC;AAAE,IAAA;AAAF,GAAD,KAAiB,IAAG,OAAO,CAAC,OAAQ,KAAI,MAAO,EAAvD,CAAb;;AACA,MAAI,OAAO,CAAC,QAAR,IAAoB,KAAK,CAAC,SAA1B,IAAuC,WAAW,CAAC,OAAZ,KAAwB,WAAnE,EAAgF;;AAE5E,UAAM,WAAW,CAAC,OAAlB;AACH;;AACD,SAAO,OAAO,CAAC,OAAO,EAClB,GAAG,KADe;AAElB,IAAA,GAFkB;AAGlB,IAAA,MAHkB;AAIlB,IAAA,MAJkB;AAKlB,IAAA,OALkB;AAMlB,IAAA;AANkB,GAAP,CAAD,EAOV,CAAC,KAAD,EAAQ,GAAR,EAAa,MAAb,EAAqB,MAArB,EAA6B,OAA7B,EAAsC,QAAtC,CAPU,CAAd;AAQH;;AACM,MAAM,UAAN,SAAyB,KAAzB,CAA+B;AAClC,EAAA,WAAW,CAAC,QAAD,EAAW;AAClB,UAAO,GAAE,QAAQ,CAAC,MAAO,IAAG,QAAQ,CAAC,UAAW,EAAhD;AACA,SAAK,QAAL,GAAgB,QAAhB;;;AAEA,QAAI,MAAM,CAAC,cAAX,EAA2B;;AAEvB,MAAA,MAAM,CAAC,cAAP,CAAsB,IAAtB,EAA4B,UAAU,CAAC,SAAvC;AACH;AACJ;;AATiC;;AAWtC,MAAM,aAAa,GAAG,CAAC,MAAD,EAAS,IAAT,KAAmB,GAAD,IAAS;AAC7C,MAAI,CAAC,GAAG,CAAC,EAAT,EACI,OAAO,OAAO,CAAC,MAAR,CAAe,IAAI,UAAJ,CAAe,GAAf,CAAf,CAAP;AACJ,MAAI,OAAO,IAAP,KAAgB,SAApB,EACI,OAAO,IAAI,GAAG,GAAG,CAAC,IAAJ,EAAH,GAAgB,GAA3B;AACJ,SAAO,MAAM,KAAK,kBAAX,GAAgC,GAAG,CAAC,IAAJ,EAAhC,GAA6C,GAApD;AACH,CAND;;AAOA,SAAS,OAAT,CAAiB,CAAjB,EAAoB;AAChB,SAAO,OAAO,CAAP,KAAa,QAAb,IAAyB,oBAAoB,CAApD;AACH;;;;;;;;;;AAQD,SAAS,aAAT,CAAuB,QAAvB,EAAiC,IAAjC,EAAuC;AAAE,EAAA,KAAF;AAAS,EAAA,IAAT;AAAe,KAAG;AAAlB,IAA8B,EAArE,EAAyE;AACrE,QAAM,MAAM,GAAG,QAAQ,CAAC,MAAT,IAAoB,IAAI,IAAI,IAAI,CAAC,MAAhD;AACA,QAAM,OAAO,GAAG,QAAQ,CAAC,OAAT,IAAqB,IAAI,IAAI,IAAI,CAAC,OAAlC,IAA8C,EAA9D;AACA,QAAM,MAAM,GAAG,OAAO,CAAC,QAAD,CAAP,IAAqB,OAAO,CAAC,QAAD,CAA5B,IAA2C,OAAO,CAAC,GAAR,IAAe,OAAO,CAAC,GAAR,CAAY,QAAZ,CAAzE;;AACA,QAAM,OAAO,GAAG,CAAC,KAAD,EAAQ,IAAR,KAAiB,WAAW,CAAC,KAAZ,CAAkB,KAAlB,EAAyB,IAAzB,EAA+B,IAA/B,CAAoC,aAAa,CAAC,MAAD,EAAS,IAAT,CAAjD,CAAjC;;AACA,QAAM,OAAO,GAAG,OAAO,KAAP,KAAiB,SAAjB,GAA6B,KAA7B,GAAqC,CAAC,MAAD,EAAS,KAAT,EAAgB,OAAhB,EAAyB,QAAzB,EAAmC,OAAnC,CAA2C,MAA3C,MAAuD,CAAC,CAA7G;AACA,QAAM,EAAE,GAAG,OAAO,GAAG,SAAH,GAAe,WAAjC;AACA,QAAM,QAAQ,GAAG,IAAI,CAAC,SAAL,CAAe;AAC5B,IAAA,QAD4B;AAE5B,IAAA,IAF4B;AAG5B,IAAA;AAH4B,GAAf,CAAjB;AAKA,QAAM,SAAS,GAAG,WAAW,CAAC,CAAC,CAAD,EAAI;AAAE,IAAA;AAAF,GAAJ,KAAmB;AAC7C,WAAO,OAAO,CAAC,QAAD,EAAW;AAAE,MAAA,MAAF;AAAU,SAAG;AAAb,KAAX,CAAd;AACH,GAF4B,EAE1B,CAAC,QAAD,CAF0B,CAEhB;AAFgB,GAA7B;AAIA,QAAM,OAAO,GAAG,WAAW,CAAC,UAAU,CAAC,QAAD,CAAV,EAAsB,CAAtB,EAAyB;AAAE,IAAA;AAAF,GAAzB,EAAqC;AAC7D,QAAI,CAAC,QAAD,IAAa,OAAO,CAAC,QAAD,CAAxB,EAAoC;AAChC,aAAO,OAAO,CAAC,QAAD,EAAW;AAAE,QAAA,MAAF;AAAU,WAAG;AAAb,OAAX,CAAd;AACH;;AACD,QAAI,OAAO,QAAP,KAAoB,UAAxB,EAAoC;AAChC,YAAM;AAAE,QAAA,QAAQ,EAAE,WAAZ;AAAyB,WAAG;AAA5B,UAAwC,QAAQ,CAAC;AAAE,QAAA,QAAF;AAAY,QAAA,MAAZ;AAAoB,WAAG;AAAvB,OAAD,CAAtD;AACA,aAAO,OAAO,CAAC,WAAW,IAAI,QAAhB,EAA0B;AAAE,QAAA,MAAF;AAAU,WAAG;AAAb,OAA1B,CAAd;AACH;;AACD,UAAM;AAAE,MAAA,QAAQ,EAAE,WAAZ;AAAyB,SAAG;AAA5B,QAAwC,QAA9C;AACA,WAAO,OAAO,CAAC,WAAW,IAAI,QAAhB,EAA0B;AAAE,MAAA,MAAF;AAAU,SAAG,IAAb;AAAmB,SAAG;AAAtB,KAA1B,CAAd;AACH,GAV0B,EAUxB,CAAC,QAAD,CAVwB,CAUd;AAVc,GAA3B;AAYA,QAAM,KAAK,GAAG,QAAQ,CAAC,EACnB,GAAG,OADgB;AAEnB,KAAC,EAAD,GAAM,OAAO,GAAG,OAAH,GAAa;AAFP,GAAD,CAAtB;AAIA,EAAA,aAAa,CAAC,KAAD,EAAQ,CAAC;AAAE,IAAA,OAAF;AAAW,IAAA;AAAX,GAAD,KAA0B,IAAG,OAAQ,KAAI,MAAO,EAAxD,CAAb;AACA,SAAO,KAAP;AACH;;AACD,MAAM,WAAW,GAAG,MAAM;AACtB,QAAM,IAAI,KAAJ,CAAU,uGAAV,CAAN;AACH,CAFD;;AAGA,IAAA,UAAA,GAAe,SAAS,GAAG,QAAH,GAAc,WAAtC;AACY,MAAC,QAAQ,GAAG,SAAS,GAAG,aAAH,GAAmB,WAAxC","sourcesContent":["/* istanbul ignore file */\n/**\n * Universal global scope object. In the browser this is `self`, in Node.js and React Native it's `global`.\n * This file is excluded from coverage reporting because these globals are environment-specific so we can't test them all.\n */\nconst globalScope = (() => {\n    if (typeof self === \"object\" && self.self === self)\n        return self;\n    if (typeof global === \"object\" && global.global === global)\n        return global;\n    if (typeof global === \"object\" && global.GLOBAL === global)\n        return global;\n    return {}; // fallback that relies on imported modules to be singletons\n})();\n/**\n * Globally available object used to connect the DevTools to all React Async instances.\n */\nglobalScope.__REACT_ASYNC__ = globalScope.__REACT_ASYNC__ || {};\nexport const noop = () => { };\nexport class MockAbortController {\n    constructor() {\n        this.abort = noop;\n        this.signal = {};\n    }\n}\nexport default globalScope;\n","let PropTypes;\ntry {\n    PropTypes = require(\"prop-types\");\n}\ncatch (e) { }\nconst childrenFn = PropTypes && PropTypes.oneOfType([PropTypes.node, PropTypes.func]);\nconst stateObject = PropTypes &&\n    PropTypes.shape({\n        initialValue: PropTypes.any,\n        data: PropTypes.any,\n        error: PropTypes.instanceOf(Error),\n        value: PropTypes.any,\n        startedAt: PropTypes.instanceOf(Date),\n        finishedAt: PropTypes.instanceOf(Date),\n        status: PropTypes.oneOf([\"initial\", \"pending\", \"fulfilled\", \"rejected\"]),\n        isInitial: PropTypes.bool,\n        isPending: PropTypes.bool,\n        isLoading: PropTypes.bool,\n        isFulfilled: PropTypes.bool,\n        isResolved: PropTypes.bool,\n        isRejected: PropTypes.bool,\n        isSettled: PropTypes.bool,\n        counter: PropTypes.number,\n        promise: PropTypes.instanceOf(Promise),\n        run: PropTypes.func,\n        reload: PropTypes.func,\n        cancel: PropTypes.func,\n        setData: PropTypes.func,\n        setError: PropTypes.func,\n    });\nexport default PropTypes && {\n    Async: {\n        children: childrenFn,\n        promise: PropTypes.instanceOf(Promise),\n        promiseFn: PropTypes.func,\n        deferFn: PropTypes.func,\n        watch: PropTypes.any,\n        watchFn: PropTypes.func,\n        initialValue: PropTypes.any,\n        onResolve: PropTypes.func,\n        onReject: PropTypes.func,\n        reducer: PropTypes.func,\n        dispatcher: PropTypes.func,\n        debugLabel: PropTypes.string,\n        suspense: PropTypes.bool,\n    },\n    Initial: {\n        children: childrenFn,\n        state: stateObject.isRequired,\n        persist: PropTypes.bool,\n    },\n    Pending: {\n        children: childrenFn,\n        state: stateObject.isRequired,\n        initial: PropTypes.bool,\n    },\n    Fulfilled: {\n        children: childrenFn,\n        state: stateObject.isRequired,\n        persist: PropTypes.bool,\n    },\n    Rejected: {\n        children: childrenFn,\n        state: stateObject.isRequired,\n        persist: PropTypes.bool,\n    },\n    Settled: {\n        children: childrenFn,\n        state: stateObject.isRequired,\n        persist: PropTypes.bool,\n    },\n};\n","import React from \"react\";\nimport propTypes from \"./propTypes\";\nconst renderFn = (children, ...args) => {\n    if (typeof children === \"function\") {\n        const render = children;\n        return render(...args);\n    }\n    return children;\n};\n/**\n * Renders only when no promise has started or completed yet.\n *\n * @prop {Function|Node} children Function (passing state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show until we have data, even while pending (loading) or when an error occurred\n */\nexport const IfInitial = ({ children, persist, state = {}, }) => React.createElement(React.Fragment, null, state.isInitial || (persist && !state.data) ? renderFn(children, state) : null);\n/**\n * Renders only while pending (promise is loading).\n *\n * @prop {Function|Node} children Function (passing state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} initial Show only on initial load (data is undefined)\n */\nexport const IfPending = ({ children, initial, state = {}, }) => React.createElement(React.Fragment, null, state.isPending && (!initial || !state.value) ? renderFn(children, state) : null);\n/**\n * Renders only when promise is resolved.\n *\n * @prop {Function|Node} children Function (passing data and state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show old data while pending (promise is loading)\n */\nexport const IfFulfilled = ({ children, persist, state = {}, }) => (React.createElement(React.Fragment, null, state.isFulfilled || (persist && state.data) ? renderFn(children, state.data, state) : null));\n/**\n * Renders only when promise is rejected.\n *\n * @prop {Function|Node} children Function (passing error and state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show old error while pending (promise is loading)\n */\nexport const IfRejected = ({ children, persist, state = {}, }) => (React.createElement(React.Fragment, null, state.isRejected || (persist && state.error) ? renderFn(children, state.error, state) : null));\n/**\n * Renders only when promise is fulfilled or rejected.\n *\n * @prop {Function|Node} children Function (passing state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show old data or error while pending (promise is loading)\n */\nexport const IfSettled = ({ children, persist, state = {}, }) => React.createElement(React.Fragment, null, state.isSettled || (persist && state.value) ? renderFn(children, state) : null);\nif (propTypes) {\n    IfInitial.propTypes = propTypes.Initial;\n    IfPending.propTypes = propTypes.Pending;\n    IfFulfilled.propTypes = propTypes.Fulfilled;\n    IfRejected.propTypes = propTypes.Rejected;\n    IfSettled.propTypes = propTypes.Settled;\n}\n","export var StatusTypes;\n(function (StatusTypes) {\n    StatusTypes[\"initial\"] = \"initial\";\n    StatusTypes[\"pending\"] = \"pending\";\n    StatusTypes[\"fulfilled\"] = \"fulfilled\";\n    StatusTypes[\"rejected\"] = \"rejected\";\n})(StatusTypes || (StatusTypes = {}));\nexport const getInitialStatus = (value, promise) => {\n    if (value instanceof Error)\n        return StatusTypes.rejected;\n    if (value !== undefined)\n        return StatusTypes.fulfilled;\n    if (promise)\n        return StatusTypes.pending;\n    return StatusTypes.initial;\n};\nexport const getIdleStatus = (value) => {\n    if (value instanceof Error)\n        return StatusTypes.rejected;\n    if (value !== undefined)\n        return StatusTypes.fulfilled;\n    return StatusTypes.initial;\n};\nexport const getStatusProps = (status) => ({\n    status,\n    isInitial: status === StatusTypes.initial,\n    isPending: status === StatusTypes.pending,\n    isLoading: status === StatusTypes.pending,\n    isFulfilled: status === StatusTypes.fulfilled,\n    isResolved: status === StatusTypes.fulfilled,\n    isRejected: status === StatusTypes.rejected,\n    isSettled: status === StatusTypes.fulfilled || status === StatusTypes.rejected,\n});\n","import { getInitialStatus, getIdleStatus, getStatusProps, StatusTypes } from \"./status\";\n// This exists to make sure we don't hold any references to user-provided functions\n// The way NeverSettle extends from Promise is complicated, but can't be done differently because Babel doesn't support\n// extending built-in classes. See https://babeljs.io/docs/en/caveats/#classes\nconst NeverSettle = function () { };\n/* istanbul ignore next */\nif (Object.setPrototypeOf) {\n    Object.setPrototypeOf(NeverSettle, Promise);\n}\nelse {\n    ;\n    NeverSettle.__proto__ = Promise;\n}\nNeverSettle.prototype = Object.assign(Object.create(Promise.prototype), {\n    finally() {\n        return this;\n    },\n    catch() {\n        return this;\n    },\n    then() {\n        return this;\n    },\n});\nexport const neverSettle = new NeverSettle();\nexport var ActionTypes;\n(function (ActionTypes) {\n    ActionTypes[\"start\"] = \"start\";\n    ActionTypes[\"cancel\"] = \"cancel\";\n    ActionTypes[\"fulfill\"] = \"fulfill\";\n    ActionTypes[\"reject\"] = \"reject\";\n})(ActionTypes || (ActionTypes = {}));\nexport const init = ({ initialValue, promise, promiseFn, }) => ({\n    initialValue,\n    data: initialValue instanceof Error ? undefined : initialValue,\n    error: initialValue instanceof Error ? initialValue : undefined,\n    value: initialValue,\n    startedAt: promise || promiseFn ? new Date() : undefined,\n    finishedAt: initialValue ? new Date() : undefined,\n    ...getStatusProps(getInitialStatus(initialValue, promise || promiseFn)),\n    counter: 0,\n    promise: neverSettle,\n});\nexport const reducer = (state, action) => {\n    switch (action.type) {\n        case ActionTypes.start:\n            return {\n                ...state,\n                startedAt: new Date(),\n                finishedAt: undefined,\n                ...getStatusProps(StatusTypes.pending),\n                counter: action.meta.counter,\n                promise: action.meta.promise,\n            };\n        case ActionTypes.cancel:\n            return {\n                ...state,\n                startedAt: undefined,\n                finishedAt: undefined,\n                ...getStatusProps(getIdleStatus(state.error || state.data)),\n                counter: action.meta.counter,\n                promise: action.meta.promise,\n            };\n        case ActionTypes.fulfill:\n            return {\n                ...state,\n                data: action.payload,\n                value: action.payload,\n                error: undefined,\n                finishedAt: new Date(),\n                ...getStatusProps(StatusTypes.fulfilled),\n                promise: action.meta.promise,\n            };\n        case ActionTypes.reject:\n            return {\n                ...state,\n                error: action.payload,\n                value: action.payload,\n                finishedAt: new Date(),\n                ...getStatusProps(StatusTypes.rejected),\n                promise: action.meta.promise,\n            };\n        default:\n            return state;\n    }\n};\nexport const dispatchMiddleware = (dispatch) => (action, ...args) => {\n    dispatch(action, ...args);\n    if (action.type === ActionTypes.start && typeof action.payload === \"function\") {\n        action.payload();\n    }\n};\n","import React from \"react\";\nimport globalScope, { MockAbortController } from \"./globalScope\";\nimport { IfInitial, IfPending, IfFulfilled, IfRejected, IfSettled } from \"./helpers\";\nimport propTypes from \"./propTypes\";\nimport { neverSettle, ActionTypes, init, dispatchMiddleware, reducer as asyncReducer, } from \"./reducer\";\nclass Async extends React.Component {\n}\n/**\n * createInstance allows you to create instances of Async that are bound to a specific promise.\n * A unique instance also uses its own React context for better nesting capability.\n */\nexport function createInstance(defaultOptions = {}, displayName = \"Async\") {\n    const { Consumer: UnguardedConsumer, Provider } = React.createContext(undefined);\n    function Consumer({ children }) {\n        return (React.createElement(UnguardedConsumer, null, value => {\n            if (!value) {\n                throw new Error(\"this component should only be used within an associated <Async> component!\");\n            }\n            return children(value);\n        }));\n    }\n    class Async extends React.Component {\n        constructor(props) {\n            super(props);\n            this.mounted = false;\n            this.counter = 0;\n            this.args = [];\n            this.promise = neverSettle;\n            this.abortController = new MockAbortController();\n            this.start = this.start.bind(this);\n            this.load = this.load.bind(this);\n            this.run = this.run.bind(this);\n            this.cancel = this.cancel.bind(this);\n            this.onResolve = this.onResolve.bind(this);\n            this.onReject = this.onReject.bind(this);\n            this.setData = this.setData.bind(this);\n            this.setError = this.setError.bind(this);\n            const promise = props.promise;\n            const promiseFn = props.promiseFn || defaultOptions.promiseFn;\n            const initialValue = props.initialValue || defaultOptions.initialValue;\n            this.state = {\n                ...init({ initialValue, promise, promiseFn }),\n                cancel: this.cancel,\n                run: this.run,\n                reload: () => {\n                    this.load();\n                    this.run(...this.args);\n                },\n                setData: this.setData,\n                setError: this.setError,\n            };\n            this.debugLabel = props.debugLabel || defaultOptions.debugLabel;\n            const { devToolsDispatcher } = globalScope.__REACT_ASYNC__;\n            const _reducer = props.reducer || defaultOptions.reducer;\n            const _dispatcher = props.dispatcher || defaultOptions.dispatcher || devToolsDispatcher;\n            const reducer = _reducer\n                ? (state, action) => _reducer(state, action, asyncReducer)\n                : asyncReducer;\n            const dispatch = dispatchMiddleware((action, callback) => {\n                this.setState(state => reducer(state, action), callback);\n            });\n            this.dispatch = _dispatcher ? action => _dispatcher(action, dispatch, props) : dispatch;\n        }\n        componentDidMount() {\n            this.mounted = true;\n            if (this.props.promise || !this.state.initialValue) {\n                this.load();\n            }\n        }\n        componentDidUpdate(prevProps) {\n            const { watch, watchFn = defaultOptions.watchFn, promise, promiseFn } = this.props;\n            if (watch !== prevProps.watch) {\n                if (this.counter)\n                    this.cancel();\n                return this.load();\n            }\n            if (watchFn &&\n                watchFn({ ...defaultOptions, ...this.props }, { ...defaultOptions, ...prevProps })) {\n                if (this.counter)\n                    this.cancel();\n                return this.load();\n            }\n            if (promise !== prevProps.promise) {\n                if (this.counter)\n                    this.cancel();\n                if (promise)\n                    return this.load();\n            }\n            if (promiseFn !== prevProps.promiseFn) {\n                if (this.counter)\n                    this.cancel();\n                if (promiseFn)\n                    return this.load();\n            }\n        }\n        componentWillUnmount() {\n            this.cancel();\n            this.mounted = false;\n        }\n        getMeta(meta) {\n            return {\n                counter: this.counter,\n                promise: this.promise,\n                debugLabel: this.debugLabel,\n                ...meta,\n            };\n        }\n        start(promiseFn) {\n            if (\"AbortController\" in globalScope) {\n                this.abortController.abort();\n                this.abortController = new globalScope.AbortController();\n            }\n            this.counter++;\n            return (this.promise = new Promise((resolve, reject) => {\n                if (!this.mounted)\n                    return;\n                const executor = () => promiseFn().then(resolve, reject);\n                this.dispatch({ type: ActionTypes.start, payload: executor, meta: this.getMeta() });\n            }));\n        }\n        load() {\n            const promise = this.props.promise;\n            const promiseFn = this.props.promiseFn || defaultOptions.promiseFn;\n            if (promise) {\n                this.start(() => promise)\n                    .then(this.onResolve(this.counter))\n                    .catch(this.onReject(this.counter));\n            }\n            else if (promiseFn) {\n                const props = { ...defaultOptions, ...this.props };\n                this.start(() => promiseFn(props, this.abortController))\n                    .then(this.onResolve(this.counter))\n                    .catch(this.onReject(this.counter));\n            }\n        }\n        run(...args) {\n            const deferFn = this.props.deferFn || defaultOptions.deferFn;\n            if (deferFn) {\n                this.args = args;\n                const props = { ...defaultOptions, ...this.props };\n                return this.start(() => deferFn(args, props, this.abortController)).then(this.onResolve(this.counter), this.onReject(this.counter));\n            }\n        }\n        cancel() {\n            const onCancel = this.props.onCancel || defaultOptions.onCancel;\n            onCancel && onCancel();\n            this.counter++;\n            this.abortController.abort();\n            this.mounted && this.dispatch({ type: ActionTypes.cancel, meta: this.getMeta() });\n        }\n        onResolve(counter) {\n            return (data) => {\n                if (this.counter === counter) {\n                    const onResolve = this.props.onResolve || defaultOptions.onResolve;\n                    this.setData(data, () => onResolve && onResolve(data));\n                }\n                return data;\n            };\n        }\n        onReject(counter) {\n            return (error) => {\n                if (this.counter === counter) {\n                    const onReject = this.props.onReject || defaultOptions.onReject;\n                    this.setError(error, () => onReject && onReject(error));\n                }\n                return error;\n            };\n        }\n        setData(data, callback) {\n            this.mounted &&\n                this.dispatch({ type: ActionTypes.fulfill, payload: data, meta: this.getMeta() }, callback);\n            return data;\n        }\n        setError(error, callback) {\n            this.mounted &&\n                this.dispatch({ type: ActionTypes.reject, payload: error, error: true, meta: this.getMeta() }, callback);\n            return error;\n        }\n        render() {\n            const { children, suspense } = this.props;\n            if (suspense && this.state.isPending && this.promise !== neverSettle) {\n                // Rely on Suspense to handle the loading state\n                throw this.promise;\n            }\n            if (typeof children === \"function\") {\n                const render = children;\n                return React.createElement(Provider, { value: this.state }, render(this.state));\n            }\n            if (children !== undefined && children !== null) {\n                return React.createElement(Provider, { value: this.state }, children);\n            }\n            return null;\n        }\n    }\n    if (propTypes)\n        Async.propTypes = propTypes.Async;\n    const AsyncInitial = props => (React.createElement(Consumer, null, st => React.createElement(IfInitial, Object.assign({}, props, { state: st }))));\n    const AsyncPending = props => (React.createElement(Consumer, null, st => React.createElement(IfPending, Object.assign({}, props, { state: st }))));\n    const AsyncFulfilled = props => (React.createElement(Consumer, null, st => React.createElement(IfFulfilled, Object.assign({}, props, { state: st }))));\n    const AsyncRejected = props => (React.createElement(Consumer, null, st => React.createElement(IfRejected, Object.assign({}, props, { state: st }))));\n    const AsyncSettled = props => (React.createElement(Consumer, null, st => React.createElement(IfSettled, Object.assign({}, props, { state: st }))));\n    AsyncInitial.displayName = `${displayName}.Initial`;\n    AsyncPending.displayName = `${displayName}.Pending`;\n    AsyncFulfilled.displayName = `${displayName}.Fulfilled`;\n    AsyncRejected.displayName = `${displayName}.Rejected`;\n    AsyncSettled.displayName = `${displayName}.Settled`;\n    return Object.assign(Async, {\n        displayName: displayName,\n        Initial: AsyncInitial,\n        Pending: AsyncPending,\n        Loading: AsyncPending,\n        Fulfilled: AsyncFulfilled,\n        Resolved: AsyncFulfilled,\n        Rejected: AsyncRejected,\n        Settled: AsyncSettled,\n    });\n}\nexport default createInstance();\n","import { useCallback, useDebugValue, useEffect, useMemo, useRef, useReducer } from \"react\";\nimport globalScope, { MockAbortController, noop } from \"./globalScope\";\nimport { neverSettle, ActionTypes, init, dispatchMiddleware, reducer as asyncReducer, } from \"./reducer\";\nfunction useAsync(arg1, arg2) {\n    const options = typeof arg1 === \"function\"\n        ? {\n            ...arg2,\n            promiseFn: arg1,\n        }\n        : arg1;\n    const counter = useRef(0);\n    const isMounted = useRef(true);\n    const lastArgs = useRef(undefined);\n    const lastOptions = useRef(options);\n    const lastPromise = useRef(neverSettle);\n    const abortController = useRef(new MockAbortController());\n    const { devToolsDispatcher } = globalScope.__REACT_ASYNC__;\n    const { reducer, dispatcher = devToolsDispatcher } = options;\n    const [state, _dispatch] = useReducer(reducer ? (state, action) => reducer(state, action, asyncReducer) : asyncReducer, options, init);\n    const dispatch = useCallback(dispatcher\n        ? action => dispatcher(action, dispatchMiddleware(_dispatch), lastOptions.current)\n        : dispatchMiddleware(_dispatch), [dispatcher]);\n    const { debugLabel } = options;\n    const getMeta = useCallback((meta) => ({\n        counter: counter.current,\n        promise: lastPromise.current,\n        debugLabel,\n        ...meta,\n    }), [debugLabel]);\n    const setData = useCallback((data, callback = noop) => {\n        if (isMounted.current) {\n            dispatch({\n                type: ActionTypes.fulfill,\n                payload: data,\n                meta: getMeta(),\n            });\n            callback();\n        }\n        return data;\n    }, [dispatch, getMeta]);\n    const setError = useCallback((error, callback = noop) => {\n        if (isMounted.current) {\n            dispatch({\n                type: ActionTypes.reject,\n                payload: error,\n                error: true,\n                meta: getMeta(),\n            });\n            callback();\n        }\n        return error;\n    }, [dispatch, getMeta]);\n    const { onResolve, onReject } = options;\n    const handleResolve = useCallback(count => (data) => count === counter.current && setData(data, () => onResolve && onResolve(data)), [setData, onResolve]);\n    const handleReject = useCallback(count => (err) => count === counter.current && setError(err, () => onReject && onReject(err)), [setError, onReject]);\n    const start = useCallback(promiseFn => {\n        if (\"AbortController\" in globalScope) {\n            abortController.current.abort();\n            abortController.current = new globalScope.AbortController();\n        }\n        counter.current++;\n        return (lastPromise.current = new Promise((resolve, reject) => {\n            if (!isMounted.current)\n                return;\n            const executor = () => promiseFn().then(resolve, reject);\n            dispatch({\n                type: ActionTypes.start,\n                payload: executor,\n                meta: getMeta(),\n            });\n        }));\n    }, [dispatch, getMeta]);\n    const { promise, promiseFn, initialValue } = options;\n    const load = useCallback(() => {\n        const isPreInitialized = initialValue && counter.current === 0;\n        if (promise) {\n            start(() => promise)\n                .then(handleResolve(counter.current))\n                .catch(handleReject(counter.current));\n        }\n        else if (promiseFn && !isPreInitialized) {\n            start(() => promiseFn(lastOptions.current, abortController.current))\n                .then(handleResolve(counter.current))\n                .catch(handleReject(counter.current));\n        }\n    }, [start, promise, promiseFn, initialValue, handleResolve, handleReject]);\n    const { deferFn } = options;\n    const run = useCallback((...args) => {\n        if (deferFn) {\n            lastArgs.current = args;\n            start(() => deferFn(args, lastOptions.current, abortController.current))\n                .then(handleResolve(counter.current))\n                .catch(handleReject(counter.current));\n        }\n    }, [start, deferFn, handleResolve, handleReject]);\n    const reload = useCallback(() => {\n        lastArgs.current ? run(...lastArgs.current) : load();\n    }, [run, load]);\n    const { onCancel } = options;\n    const cancel = useCallback(() => {\n        onCancel && onCancel();\n        counter.current++;\n        abortController.current.abort();\n        isMounted.current &&\n            dispatch({\n                type: ActionTypes.cancel,\n                meta: getMeta(),\n            });\n    }, [onCancel, dispatch, getMeta]);\n    /* These effects should only be triggered on changes to specific props */\n    /* eslint-disable react-hooks/exhaustive-deps */\n    const { watch, watchFn } = options;\n    useEffect(() => {\n        if (watchFn && lastOptions.current && watchFn(options, lastOptions.current)) {\n            lastOptions.current = options;\n            load();\n        }\n    });\n    useEffect(() => {\n        lastOptions.current = options;\n    }, [options]);\n    useEffect(() => {\n        if (counter.current)\n            cancel();\n        if (promise || promiseFn)\n            load();\n    }, [promise, promiseFn, watch]);\n    useEffect(() => () => {\n        isMounted.current = false;\n    }, []);\n    useEffect(() => () => cancel(), []);\n    /* eslint-enable react-hooks/exhaustive-deps */\n    useDebugValue(state, ({ status }) => `[${counter.current}] ${status}`);\n    if (options.suspense && state.isPending && lastPromise.current !== neverSettle) {\n        // Rely on Suspense to handle the loading state\n        throw lastPromise.current;\n    }\n    return useMemo(() => ({\n        ...state,\n        run,\n        reload,\n        cancel,\n        setData,\n        setError,\n    }), [state, run, reload, cancel, setData, setError]);\n}\nexport class FetchError extends Error {\n    constructor(response) {\n        super(`${response.status} ${response.statusText}`);\n        this.response = response;\n        /* istanbul ignore next */\n        if (Object.setPrototypeOf) {\n            // Not available in IE 10, but can be polyfilled\n            Object.setPrototypeOf(this, FetchError.prototype);\n        }\n    }\n}\nconst parseResponse = (accept, json) => (res) => {\n    if (!res.ok)\n        return Promise.reject(new FetchError(res));\n    if (typeof json === \"boolean\")\n        return json ? res.json() : res;\n    return accept === \"application/json\" ? res.json() : res;\n};\nfunction isEvent(e) {\n    return typeof e === \"object\" && \"preventDefault\" in e;\n}\n/**\n *\n * @param {RequestInfo} resource\n * @param {RequestInit} init\n * @param {FetchOptions} options\n * @returns {AsyncState<T, FetchRun<T>>}\n */\nfunction useAsyncFetch(resource, init, { defer, json, ...options } = {}) {\n    const method = resource.method || (init && init.method);\n    const headers = resource.headers || (init && init.headers) || {};\n    const accept = headers[\"Accept\"] || headers[\"accept\"] || (headers.get && headers.get(\"accept\"));\n    const doFetch = (input, init) => globalScope.fetch(input, init).then(parseResponse(accept, json));\n    const isDefer = typeof defer === \"boolean\" ? defer : [\"POST\", \"PUT\", \"PATCH\", \"DELETE\"].indexOf(method) !== -1;\n    const fn = isDefer ? \"deferFn\" : \"promiseFn\";\n    const identity = JSON.stringify({\n        resource,\n        init,\n        isDefer,\n    });\n    const promiseFn = useCallback((_, { signal }) => {\n        return doFetch(resource, { signal, ...init });\n    }, [identity] // eslint-disable-line react-hooks/exhaustive-deps\n    );\n    const deferFn = useCallback(function ([override], _, { signal }) {\n        if (!override || isEvent(override)) {\n            return doFetch(resource, { signal, ...init });\n        }\n        if (typeof override === \"function\") {\n            const { resource: runResource, ...runInit } = override({ resource, signal, ...init });\n            return doFetch(runResource || resource, { signal, ...runInit });\n        }\n        const { resource: runResource, ...runInit } = override;\n        return doFetch(runResource || resource, { signal, ...init, ...runInit });\n    }, [identity] // eslint-disable-line react-hooks/exhaustive-deps\n    );\n    const state = useAsync({\n        ...options,\n        [fn]: isDefer ? deferFn : promiseFn,\n    });\n    useDebugValue(state, ({ counter, status }) => `[${counter}] ${status}`);\n    return state;\n}\nconst unsupported = () => {\n    throw new Error(\"useAsync requires React v16.8 or up. Upgrade your React version or use the <Async> component instead.\");\n};\nexport default useEffect ? useAsync : unsupported;\nexport const useFetch = useEffect ? useAsyncFetch : unsupported;\n"]},"metadata":{},"sourceType":"module"}